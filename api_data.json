[
  {
    "type": "post",
    "url": "/api/changeRequests/{id}/accept",
    "title": "4. Accept a Change Request",
    "version": "10.0.0",
    "name": "acceptChangeRequest",
    "group": "Change_Requests",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "WorkflowStatus",
            "optional": false,
            "field": "status",
            "description": "<p>Final status in which the change Request will be after acceptance. <div><span class=\"values\">Possible values: </span><ul class=\"values\"><li>pending deployment</li><li>deployed</li></ul></div><br style=\"clear:both\"/></p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "integer",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Change Request.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "// Update display name: \ncurl -H \"X-API-Token: yourToken\" -X POST http://rudder.example.com/rudder/api/latest/changeRequests/42/accept -d \"status=deployed\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\":\"acceptChangeRequest\",\n  \"id\" : 42\n  \"result\":\"success\",\n  \"data\":{\n    \"changeRequests\":[{\n      \"id\":42,\n      \"name\":\"Remove unused security policy\",\n      \"description\":\"\",\n      \"status\":\"Deployed\",\n      \"acceptable\":true,\n      \"created by\":\"jon.doe\",\n      \"changes\":{\n        \"directives\":[],\n        \"groups\":[],\n        \"parameters\":[],\n        \"rules\":[ {\n          \"action\":\"delete Rule\"\n          \"rule\":{\n            \"id\":\"bb803bc8-2df7-4734-a6b6-454476c82bc6\",\n            \"displayName\":\"security policy\",\n            \"shortDescription\":\"\",\n            \"longDescription\":\"\",\n            \"directives\":[],\n            \"targets\":[],\n            \"enabled\":false,\n            \"system\":false\n          }\n        }]\n      }\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/changeRequests.md",
    "groupTitle": "Change_Requests"
  },
  {
    "type": "get",
    "url": "/api/changeRequests/{id}",
    "title": "2. Get a Change Request details",
    "version": "10.0.0",
    "name": "changeRequestDetails",
    "group": "Change_Requests",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/changeRequests/42",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\":\"changeRequestDetails\",\n  \"id\" : 42\n  \"result\":\"success\",\n  \"data\":{\n    \"changeRequests\":[{\n      \"id\":42,\n      \"name\":\"Remove unused security policy\",\n      \"description\":\"\",\n      \"status\":\"Pending validation\",\n      \"acceptable\":true,\n      \"created by\":\"jon.doe\",\n      \"changes\":{\n        \"directives\":[],\n        \"groups\":[],\n        \"parameters\":[],\n        \"rules\":[ {\n          \"action\":\"delete Rule\"\n          \"rule\":{\n            \"id\":\"bb803bc8-2df7-4734-a6b6-454476c82bc6\",\n            \"displayName\":\"security policy\",\n            \"shortDescription\":\"\",\n            \"longDescription\":\"\",\n            \"directives\":[],\n            \"targets\":[],\n            \"enabled\":false,\n            \"system\":false\n          }\n        }]\n      }\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/changeRequests.md",
    "groupTitle": "Change_Requests",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "integer",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Change Request.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "delete",
    "url": "/api/changeRequests/{id}",
    "title": "3. Decline a Change Request",
    "version": "10.0.0",
    "name": "declineChangeRequest",
    "group": "Change_Requests",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X DELETE http://rudder.example.com/rudder/api/latest/changeRequests/42",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\":\"declineChangeRequest\",\n  \"id\" : 42\n  \"result\":\"success\",\n  \"data\":{\n    \"changeRequests\":[{\n      \"id\":42,\n      \"name\":\"Remove unused security policy\",\n      \"description\":\"\",\n      \"status\":\"Cancelled\",\n      \"acceptable\":true,\n      \"created by\":\"jon.doe\",\n      \"changes\":{\n        \"directives\":[],\n        \"groups\":[],\n        \"parameters\":[],\n        \"rules\":[ {\n          \"action\":\"delete Rule\"\n          \"rule\":{\n            \"id\":\"bb803bc8-2df7-4734-a6b6-454476c82bc6\",\n            \"displayName\":\"security policy\",\n            \"shortDescription\":\"\",\n            \"longDescription\":\"\",\n            \"directives\":[],\n            \"targets\":[],\n            \"enabled\":false,\n            \"system\":false\n          }\n        }]\n      }\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/changeRequests.md",
    "groupTitle": "Change_Requests",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "integer",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Change Request.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/changeRequests",
    "title": "1. List all Changes Requests",
    "version": "10.0.0",
    "name": "listChangeRequests",
    "group": "Change_Requests",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "WorkflowStatus",
            "optional": true,
            "field": "status",
            "defaultValue": "open",
            "description": "<p>The status of change requests you want to display. <div><span class=\"values\">Possible values: </span><ul class=\"values\"><li>pending validation</li><li>pending deployment</li><li>cancelled</li><li>deployed</li><li>open (pending validation + pending deployment)</li><li>closed (cancelled + deployed)</li><li>all</li></ul></div><br style=\"clear:both\"/></p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/changeRequests -d \"status=open\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "  {\n\"action\":\"listChangeRequests\",\n\"result\":\"success\",\n\"data\":{\n  \"changeRequests\":[{\n    \"id\":42,\n    \"name\":\"Remove unused security policy\",\n    \"description\":\"\",\n    \"status\":\"Pending validation\",\n    \"acceptable\":true,\n    \"created by\":\"jon.doe\",\n    \"changes\":{\n      \"directives\":[],\n      \"groups\":[],\n      \"parameters\":[],\n      \"rules\":[ {\n        \"action\":\"delete Rule\"\n        \"rule\":{\n          \"id\":\"bb803bc8-2df7-4734-a6b6-454476c82bc6\",\n          \"displayName\":\"Security Policy\",\n          \"shortDescription\":\"\",\n          \"longDescription\":\"\",\n          \"directives\":[],\n          \"targets\":[],\n          \"enabled\":false,\n          \"system\":false\n        }\n      }]\n    }\n  },{\n    \"id\":45,\n    \"name\":\"Add new package policy for Redhat nodes\",\n    \"description\":\"\",\n    \"status\":\"Pending deployment\",\n    \"acceptable\":false,\n    \"created by\":\"jon.doe\",\n    \"changes\":{\n      \"directives\":[],\n      \"groups\":[],\n      \"parameters\":[],\n      \"rules\":[ {\n        \"action\":\"modify Rule\"\n        \"rule\":{\n          \"id\":\"06ba8940-ed6c-4102-ba46-93d640a64c36\",\n          \"displayName\":\"Redhat node configuration\",\n          \"shortDescription\":\"\",\n          \"longDescription\":\"\",\n          \"directives\": {\n            \"from\" : [\"cba93d24-8780-4308-b732-84995125562a\",\"6847ad49-1c7e-4314-b764-ec176b882b6b\",\"19be05b2-fb68-4ae1-acc0-e0ad2eba71fd\",\"0be6fb7c-42c5-419e-9f6f-eb13ac4e4acd\"],\n            \"to\" : [\"cba93d24-8780-4308-b732-84995125562a\",\"7d44f9ad-9a54-4165-bb46-f66e6c674b39\",\"6847ad49-1c7e-4314-b764-ec176b882b6b\",\"19be05b2-fb68-4ae1-acc0-e0ad2eba71fd\",\"0be6fb7c-42c5-419e-9f6f-eb13ac4e4acd\"],\n          }\n          \"targets\":[\"group:3b9be575-590d-4fe4-9fa5-cc166d985ccf\"],\n          \"enabled\":false,\n          \"system\":false\n        }\n      }]\n    }\n\n  }]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/changeRequests.md",
    "groupTitle": "Change_Requests"
  },
  {
    "type": "post",
    "url": "/api/changeRequests/{id}",
    "title": "5. Update a Change Request",
    "version": "10.0.0",
    "name": "updateChangeRequest",
    "group": "Change_Requests",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "name",
            "description": "<p>Name the Change Request.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Change Request.</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "integer",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Change Request.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "// Update display name: \ncurl -H \"X-API-Token: yourToken\" -X POST http://rudder.example.com/rudder/api/latest/changeRequests/42  -d \"name=new Name of Change Request\" -d \"description=add a new description\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\":\"updateChangeRequest\",\n  \"id\" : 42\n  \"result\":\"success\",\n  \"data\":{\n    \"changeRequests\":[{\n      \"id\":42,\n      \"name\":\"new Name of Change Request\",\n      \"description\":\"add a new description\",\n      \"status\":\"Pending validation\",\n      \"acceptable\":true,\n      \"created by\":\"jon.doe\",\n      \"changes\":{\n        \"directives\":[],\n        \"groups\":[],\n        \"parameters\":[],\n        \"rules\":[ {\n          \"action\":\"delete Rule\"\n          \"rule\":{\n            \"id\":\"bb803bc8-2df7-4734-a6b6-454476c82bc6\",\n            \"displayName\":\"security policy\",\n            \"shortDescription\":\"\",\n            \"longDescription\":\"\",\n            \"directives\":[],\n            \"targets\":[],\n            \"enabled\":false,\n            \"system\":false\n          }\n        }]\n      }\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/changeRequests.md",
    "groupTitle": "Change_Requests"
  },
  {
    "type": "get",
    "url": "/api/compliance",
    "title": "1. Display global compliance of a Rudder server",
    "version": "10.0.0",
    "name": "getGlobalCompliance",
    "group": "Compliance",
    "description": "<p>Get global compliance of a Rudder server</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/latest/compliance?prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"getGlobalCompliance\",\n  \"result\": \"success\",\n  \"data\": {\n    \"globalCompliance\": {\n      \"compliance\": 57,\n      \"complianceDetails\": {\n        \"successAlreadyOK\": 48.68,\n        \"noReport\": 36.18,\n        \"successNotApplicable\": 5.92,\n        \"unexpectedMissingComponent\": 2.63,\n        \"error\": 1.32,\n        \"unexpectedUnknownComponent\": 2.63,\n        \"successRepaired\": 2.63\n      }\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/compliance.md",
    "groupTitle": "Compliance"
  },
  {
    "type": "get",
    "url": "/api/compliance/nodes/{id}",
    "title": "5. Get Compliance details of a Node",
    "version": "10.0.0",
    "name": "getNodeCompliance",
    "group": "Compliance",
    "description": "<p>Get compliance details of the Node passed as parameter</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/compliance/nodes/root?level=1&prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"nodes\": [\n      \"rules\": [{\n        \"compliance\": 0,\n        \"id\": \"32377fd7-02fd-43d0-aab7-28460a91347b\"\n      }],\n      \"mode\": \"full-compliance\",\n      \"complianceDetails\": {\n        \"noReport\": 100\n      },\n      \"compliance\": 0,\n      \"id\": \"root\"\n    }\n  ]\n},\n\"result\": \"success\",\n\"action\": \"getNodeCompliance\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/compliance.md",
    "groupTitle": "Compliance",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Node.</p>"
          }
        ],
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "Number",
            "optional": true,
            "field": "level",
            "defaultValue": "10",
            "description": "<p>Number of depth level of compliance objects to display (1:nodes, 2:rules, 3:directives, 4:components, 5:values, 6:reports)</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/compliance/nodes",
    "title": "4. Get all Nodes compliance",
    "version": "10.0.0",
    "name": "getNodesCompliance",
    "group": "Compliance",
    "description": "<p>Get the compliance details of all Nodes</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'https://rudder.example.com/rudder/api/compliance/nodes?level=2&prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"nodes\": [{\n      \"rules\": [{\n        \"complianceDetails\": {\n          \"noReport\": 100\n        },\n      \"complianceDetails\": {\n        \"noReport\": 100\n      },\n      \"compliance\": 0,\n      \"id\": \"root\"\n      \"mode\": full - compliance \",\n    }]\n  },\n  \"result\": \"success\",\n  \"action\": \"getNodesCompliance\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/compliance.md",
    "groupTitle": "Compliance",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "Number",
            "optional": true,
            "field": "level",
            "defaultValue": "10",
            "description": "<p>Number of depth level of compliance objects to display (1:nodes, 2:rules, 3:directives, 4:components, 5:values, 6:reports)</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/compliance/rules/{id}",
    "title": "3. Get a Rule compliance details",
    "version": "10.0.0",
    "name": "getRuleCompliance",
    "group": "Compliance",
    "description": "<p>Get the compliance details of one Rule, whose ID is specified in the URL</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/latest/compliance/rules/32377fd7-02fd-43d0-aab7-28460a91347b?level=2&prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"rules\": [{\n      \"directives\": [{\n        \"compliance\": 0,\n        \"id\": \"3225efda-0ede-4de8-8b96-abb901fa86d8\"\n      }],\n      \"complianceDetails\": {\n        \"noReport\": 100\n      },\n      \"compliance\": 0,\n      \"id\": \"32377fd7-02fd-43d0-aab7-28460a91347b\"\n      \"mode\": \"full-compliance\"\n    }]\n  },\n  \"result\": \"success\",\n  \"action\": \"getRuleCompliance\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/compliance.md",
    "groupTitle": "Compliance",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule</p>"
          }
        ],
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "Number",
            "optional": true,
            "field": "level",
            "defaultValue": "10",
            "description": "<p>Number of depth level of compliance objects to display (1:rules, 2:directives, 3:components, 4:nodes, 5:values, 6:reports)</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/compliance/rules",
    "title": "2. Display compliance of all Rules",
    "version": "10.0.0",
    "name": "getRulesCompliance",
    "group": "Compliance",
    "description": "<p>Get compliance of all Rules available in Rudder</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/latest/compliance/rules?level=2&prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"rules\": [{\n      \"directives\": [{\n        \"compliance\": 0,\n        \"id\": \"3225efda-0ede-4de8-8b96-abb901fa86d8\"\n      }],\n      \"mode\": \"full-compliance\",\n      \"complianceDetails\": {\n        \"noReport\": 100\n      },\n      \"compliance\": 0,\n      \"id\": \"32377fd7-02fd-43d0-aab7-28460a91347b\"\n    }]\n  },\n  \"result\": \"success\",\n  \"action\": \"getRulesCompliance\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/compliance.md",
    "groupTitle": "Compliance",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "Number",
            "optional": true,
            "field": "level",
            "defaultValue": "10",
            "description": "<p>Number of depth level of compliance objects to display (1:rules, 2:directives, 3:components, 4:nodes, 5:values, 6:reports)</p>"
          }
        ]
      }
    }
  },
  {
    "type": "put",
    "url": "/api/datasources",
    "title": "3. Create a new Data Source",
    "version": "10.0.0",
    "name": "createDataSource",
    "group": "DataSources",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Unique identifier of the data source to create.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>The human readable name of the data source to create.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the goal of the data source to create.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": false,
            "field": "enabled",
            "description": "<p>Enable or disable data source.</p>"
          },
          {
            "group": "Mono",
            "type": "Int",
            "optional": false,
            "field": "updateTimeout",
            "description": "<p>Duration in seconds before aborting data source update. The main goal is to prevent never ending requests. If a periodicity if configured, you should set that timeout at a lower value.</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": false,
            "field": "runParameters",
            "description": "<p>Parameters to configure when the data source is fetched to update node properties. See below for details.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": false,
            "field": "runParameters.onGeneration",
            "description": "<p>Trigger a fetch at the begining of a policy generation</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": false,
            "field": "runParameters.onNewNode",
            "description": "<p>Trigger a fetch when a new node is accepted, for that node</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": false,
            "field": "runParameters.schedule",
            "description": "<p>Configure if data source should be fetch periodicaly (see below for configuration)</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "allowedValues": [
              "\"scheduled\"",
              "\"notscheduled\""
            ],
            "optional": false,
            "field": "runParameters.schedule.type",
            "description": "<p>&quot;scheduled&quot;: enable periodic update; &quot;notscheduled&quot;: disable them</p>"
          },
          {
            "group": "Mono",
            "type": "Int",
            "optional": false,
            "field": "runParameters.schedule.duration",
            "description": "<p>duration in seconds between the end of an update, and the start of the following.</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": false,
            "field": "type",
            "description": "<p>Define and configure data source type. For now, only &quot;http&quot; data source is supported. See below for its Configuration</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "allowedValues": [
              "\"HTTP\""
            ],
            "optional": false,
            "field": "type.name",
            "description": "<p>Data source type name. Only &quot;http&quot; is supported for now.</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": false,
            "field": "type.parameters",
            "description": "<p>Data source type specific parameters. See below for HTTP data source parameters.</p>"
          }
        ],
        "[JSON option for \"parameters\"] HTTP data source - Parameters used to configure a data source which fetches properties via HTTP queries. You can use Rudder variable expansion (${rudder.node, ${node.properties...}) in specified parameters.": [
          {
            "group": "HTTP",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>URL to contact. Rudder expansion available.</p>"
          },
          {
            "group": "HTTP",
            "type": "String",
            "allowedValues": [
              "\"GET\"",
              "\"POST\""
            ],
            "optional": false,
            "field": "requestMethod",
            "description": "<p>HTTP method to use to contact the URL.</p>"
          },
          {
            "group": "HTTP",
            "type": "JSON",
            "optional": false,
            "field": "headers",
            "description": "<p>Represent HTTP headers for the query. JSON array of {&quot;name&quot;:&quot;xxx&quot;,&quot;value&quot;:&quot;yyy&quot;}. Rudder expansion available.</p>"
          },
          {
            "group": "HTTP",
            "type": "String",
            "optional": false,
            "field": "path",
            "description": "<p>JSON path (as defined in https://github.com/jayway/JsonPath/, without the leading &quot;$.&quot;) to find the interesting sub-json or string/number/boolean value in the answer. Let empty to use the whole answer as value.</p>"
          },
          {
            "group": "HTTP",
            "type": "Boolean",
            "optional": false,
            "field": "checkSsl",
            "description": "<p>Check SSL certificate validity for https. Must be set to false for self-signed certificate</p>"
          },
          {
            "group": "HTTP",
            "type": "Int",
            "optional": false,
            "field": "requestTimeout",
            "description": "<p>Timeout in seconds for each HTTP request</p>"
          },
          {
            "group": "HTTP",
            "type": "JSON",
            "optional": false,
            "field": "requestMode",
            "description": "<p>Configure the strategy used to query the HTTP data source. For now, only a node by node strategy is available (see below)</p>"
          },
          {
            "group": "HTTP",
            "type": "String",
            "allowedValues": [
              "\"byNode\""
            ],
            "optional": false,
            "field": "requestMode.name",
            "description": "<p>Name of the strategy to use. For now, only available is &quot;byNode&quot;: make one request for each node</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken -X PUT http://rudder.example.com/rudder/api/latest/datasources -H \"Content-type: application/json\" -d @datasources.json",
        "type": "json"
      },
      {
        "title": "datasource.json details:",
        "content": "{\n  \"name\": \"test-data-source-2\",\n  \"id\": \"test-data-source-2\",\n  \"description\": \"Data from http://jsonplaceholder.typicode.com\",\n  \"type\": {\n    \"name\": \"HTTP\",\n    \"parameters\": {\n      \"url\": \"http://jsonplaceholder.typicode.com/users/1\",\n      \"headers\": {},\n      \"path\": \"\",\n      \"checkSsl\": false,\n      \"requestTimeout\": 30,\n      \"requestMethod\": \"GET\",\n      \"requestMode\": {\n        \"name\": \"byNode\"\n      }\n    }\n  },\n  \"runParameters\": {\n    \"onGeneration\": true,\n    \"onNewNode\": true,\n    \"schedule\": {\n      \"type\": \"scheduled\",\n      \"duration\": 3600\n    }\n  },\n  \"updateTimeout\": 30,\n  \"enabled\": true\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\": \"createDataSource\",\n  \"result\": \"success\",\n  \"data\": {\n    \"datasources\": [\n      {\n        \"name\": \"test-data-source-2\",\n        \"id\": \"test-data-source-2\",\n        \"description\": \"Data from http://jsonplaceholder.typicode.com\",\n        \"type\": {\n          \"name\": \"HTTP\",\n          \"parameters\": {\n            \"url\": \"http://jsonplaceholder.typicode.com/users/1\",\n            \"headers\": {},\n            \"path\": \"\",\n            \"checkSsl\": false,\n            \"requestTimeout\": 30,\n            \"requestMethod\": \"GET\",\n            \"requestMode\": {\n              \"name\": \"byNode\"\n            }\n          }\n        },\n        \"runParameters\": {\n          \"onGeneration\": true,\n          \"onNewNode\": true,\n          \"schedule\": {\n            \"type\": \"scheduled\",\n            \"duration\": 3600\n          }\n        },\n        \"updateTimeout\": 30,\n        \"enabled\": true\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/datasources.md",
    "groupTitle": "DataSources"
  },
  {
    "type": "delete",
    "url": "/api/datasources/{id}",
    "title": "5. Delete a DataSources",
    "version": "10.0.0",
    "name": "deleteDataSource",
    "group": "DataSources",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X DELETE http://rudder.example.com/rudder/api/latest/datasources/DataSourceID",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\": \"getDataSource\",\n  \"result\": \"success\",\n  \"data\": {\n    \"datasources\": [\n      {\n        \"id\": \"test-data-source-1\",\n        \"message\": \"Data source test-data-source-1 deleted\"\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/datasources.md",
    "groupTitle": "DataSources",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Unique identifier of the data source.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "post",
    "url": "/api/datasources/reload",
    "title": "6. Update properties from data source - all nodes",
    "version": "10.0.0",
    "name": "fetchDataAllNodes",
    "group": "DataSources",
    "description": "<p>This API allows to trigger the update of properties coming from data sources for all nodes. The call is asynchrone.</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/datasources/reload",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\"action\": \"fetchDataAllNodes\",\n\"result\": \"success\",\n\"data\": \"Data for all nodes, for all configured data sources are going to be updated\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/datasources.md",
    "groupTitle": "DataSources"
  },
  {
    "type": "post",
    "url": "/api/datasources/reload/{datasourceId}",
    "title": "7. Update properties from data source with ID ${datasourceId} - all nodes",
    "version": "10.0.0",
    "name": "fetchDataAllNodes",
    "group": "DataSources",
    "description": "<p>This API allows to trigger the update of properties coming from data sources for all nodes. The call is asynchrone.</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/nodes/fetchData",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\"action\": \"fetchDataAllNodes\",\n\"result\": \"success\",\n\"data\": \"Data for all nodes, for all configured data sources are going to be updated\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/datasources.md",
    "groupTitle": "DataSources",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Unique identifier of the data source.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "post",
    "url": "/api/nodes/{id}/fetchData",
    "title": "8. Update properties from data source - node with ID ${nodeId}",
    "version": "10.0.0",
    "name": "fetchDataOneNode",
    "group": "DataSources",
    "description": "<p>This API allows to trigger the update of properties coming from data sources for that node. The call is asynchrone.</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST  https://rudder.example.com/rudder/api/latest/nodes/NodeID/fetchData",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"fetchDataOneNode\",\n  \"result\": \"success\",\n  \"data\": \"Data for node 'nodeID', for all configured data sources, is going to be updated\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/datasources.md",
    "groupTitle": "DataSources",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Node.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "post",
    "url": "/api/nodes/{id}/fetchData",
    "title": "9. Update properties from data source ${datasourceId} - node ${nodeId}",
    "version": "10.0.0",
    "name": "fetchDataOneNode",
    "group": "DataSources",
    "description": "<p>This API allows to trigger the update of properties coming from data source with ID ${datasourceId} for that node. The call is asynchrone.</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST  https://rudder.example.com/rudder/api/latest/nodes/NodeID/fetchData",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"fetchDataOneNode\",\n  \"result\": \"success\",\n  \"data\": \"Data for node 'nodeID', for all configured data sources, is going to be updated\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/datasources.md",
    "groupTitle": "DataSources",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Unique identifier of the data source.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/datasources",
    "title": "1. List all DataSources",
    "version": "10.0.0",
    "name": "getAllDataSources",
    "group": "DataSources",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'https://rudder.example.com/rudder/api/latest/datasources'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\": \"getAllDataSources\",\n  \"result\": \"success\",\n  \"data\": {\n    \"datasources\": [\n      {\n        \"name\": \"test-data-source-1\",\n        \"id\": \"test-data-source-1\",\n        \"description\": \"Data from http://jsonplaceholder.typicode.com\",\n        \"type\": {\n          \"name\": \"HTTP\",\n          \"parameters\": {\n            \"url\": \"http://jsonplaceholder.typicode.com/users/1\",\n            \"headers\": {},\n            \"params\": {},\n            \"path\": \"\",\n            \"checkSsl\": false,\n            \"requestTimeout\": 30,\n            \"requestMethod\": \"GET\",\n            \"requestMode\": {\n              \"name\": \"byNode\"\n            }\n          }\n        },\n        \"runParameters\": {\n          \"onGeneration\": true,\n          \"onNewNode\": true,\n          \"schedule\": {\n            \"type\": \"scheduled\",\n            \"duration\": 3600\n          }\n        },\n        \"updateTimeout\": 30,\n        \"enabled\": true\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/datasources.md",
    "groupTitle": "DataSources"
  },
  {
    "type": "get",
    "url": "/api/datasources/{id}",
    "title": "2. Get a data sources details",
    "version": "10.0.0",
    "name": "getDataSource",
    "group": "DataSources",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/datasources/DataSourceID",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\": \"getDataSource\",\n  \"result\": \"success\",\n  \"data\": {\n    \"datasources\": [\n      {\n        \"name\": \"test-data-source-1\",\n        \"id\": \"test-data-source-1\",\n        \"description\": \"Data from http://jsonplaceholder.typicode.com\",\n        \"type\": {\n          \"name\": \"http\",\n          \"parameters\": {\n            \"url\": \"http://jsonplaceholder.typicode.com/users/1\",\n            \"headers\": {},\n            \"path\": \"\",\n            \"checkSsl\": false,\n            \"requestTimeout\": 5,\n            \"requestMethod\": \"GET\",\n            \"requestMode\": {\n              \"name\": \"byNode\"\n            }\n          }\n        },\n        \"runParameters\": {\n          \"onGeneration\": true,\n          \"onNewNode\": true,\n          \"schedule\": {\n            \"type\": \"scheduled\",\n            \"duration\": 5\n          }\n        },\n        \"updateTimeout\": 5,\n        \"enabled\": true\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/datasources.md",
    "groupTitle": "DataSources",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Unique identifier of the data source.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "post",
    "url": "/api/datasources/{id}",
    "title": "4. Update a Data Source",
    "version": "10.0.0",
    "name": "updateDataSource",
    "group": "DataSources",
    "parameter": {
      "fields": {
        "For \"Update\" parameters, see \"Create\". Only id is not modifiable.": [
          {
            "group": "POSTseePUT",
            "type": "String",
            "optional": false,
            "field": "AllParameters",
            "description": "<p>See above.</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Unique identifier of the data source.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "# Change description and disable a data source\ncurl -H \"X-API-Token: yourToken\" -X POST http://rudder.example.com/rudder/api/latest/datasources/DataSourceID -H \"Content-type: application/json\" -d @disable-datasource-1.json.json",
        "type": "json"
      },
      {
        "title": "disable-datasource-1.json.json details:",
        "content": "{\n  \"description\": \"This data source is temporarly no more used and so disabled\",\n  \"enabled\": false\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\": \"updateDataSource\",\n  \"result\": \"success\",\n  \"data\": {\n    \"datasources\": [\n      {\n        \"name\": \"test-data-source-1\",\n        \"id\": \"test-data-source-1\",\n        \"description\": \"This data source is temporarly no more used and so disabled\",\n        \"type\": {\n          \"name\": \"HTTP\",\n          \"parameters\": {\n            \"url\": \"http://jsonplaceholder.typicode.com/users/1\",\n            \"headers\": {},\n            \"path\": \"\",\n            \"checkSsl\": false,\n            \"requestTimeout\": 30,\n            \"requestMethod\": \"GET\",\n            \"requestMode\": {\n              \"name\": \"byNode\"\n            }\n          }\n        },\n        \"runParameters\": {\n          \"onGeneration\": true,\n          \"onNewNode\": true,\n          \"schedule\": {\n            \"type\": \"scheduled\",\n            \"duration\": 3600\n          }\n        },\n        \"updateTimeout\": 30,\n        \"enabled\": false\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/datasources.md",
    "groupTitle": "DataSources"
  },
  {
    "type": "post",
    "url": "/api/directives/{id}/check",
    "title": "7. Check that update on a Directive is valid",
    "version": "10.0.0",
    "name": "checkDirective",
    "group": "Directives",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "displayName",
            "description": "<p>Name of the Directive to create.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "shortDescription",
            "description": "<p>Short description of the Directive.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "longDescription",
            "description": "<p>Long description of the Directive.</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": true,
            "field": "parameters",
            "description": "<p>Directive parameters.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "description": "<p>Enable/disable the Directive. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          },
          {
            "group": "Mono",
            "type": "Int",
            "optional": true,
            "field": "priority",
            "description": "<p>Directive priority. Determines which value to use if there are several Directives based on the same technique applied to a Node.</p>"
          },
          {
            "group": "Mono",
            "type": "TechniqueVersion",
            "optional": true,
            "field": "techniqueVersion",
            "description": "<p>Technique Version.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "policyMode",
            "defaultValue": "default",
            "description": "<p>Policy mode to execute the directive with. Can be &quot;default&quot;, &quot;enforce&quot; or &quot;audit&quot;.</p>"
          }
        ],
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "Tag",
            "optional": true,
            "field": "tags",
            "description": "<p>Tags linked to this directive. As JSON, send an object { &quot;key1&quot;:&quot;value1&quot;, ..., &quot;keyN&quot;:&quot;valueN&quot;}. As query paramereter, send a &quot;key:value&quot; pair for each tag.</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Directive.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "// Update display name: \ncurl -H \"X-API-Token: yourToken\" -X POST http://rudder.example.com/rudder/api/latest/directives/DirectiveID/check  -d \"displayName=Name of New Directive\"",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/directives.md",
    "groupTitle": "Directives"
  },
  {
    "type": "put",
    "url": "/api/directives",
    "title": "6. Clone a Directive",
    "version": "10.0.0",
    "name": "cloneDirective",
    "group": "Directives",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "UUID",
            "optional": false,
            "field": "source",
            "description": "<p>The id of the Directive the clone will be based onto. missing source will</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "displayName",
            "description": "<p>The name of the Directive to create, this parameter is mandatory</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": true,
            "field": "parameters",
            "description": "<p>The full list of parameters. This parameter can be empty, but the Directive will not be applied.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "shortescription",
            "description": "<p>Short description of the Directive.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "longDescription",
            "description": "<p>Long description of the Directive.</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "id",
            "defaultValue": "autoGenerated",
            "description": "<p>Define the id of the Directive to create, Rudder will generate an id if this is missing. You should only use it for specific use case</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "defaultValue": "true",
            "description": "<p>Enable the Directive at creation. But this parameter can be overriden. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          },
          {
            "group": "Mono",
            "type": "Int",
            "optional": true,
            "field": "priority",
            "defaultValue": "5",
            "description": "<p>Directive priority. Determines which value to use if there are several Directives based on the same technique applied to a Node.</p>"
          },
          {
            "group": "Mono",
            "type": "TechniqueVersion",
            "optional": true,
            "field": "techniqueVersion",
            "defaultValue": "same",
            "description": "<p>version as source] Define the technique version used. By default it will used the version of the cloned Directive</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "policyMode",
            "defaultValue": "default",
            "description": "<p>Policy mode to execute the directive with. Can be &quot;default&quot;, &quot;enforce&quot; or &quot;audit&quot;.</p>"
          }
        ],
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "Tag",
            "optional": true,
            "field": "tags",
            "description": "<p>Tags linked to this directive. As JSON, send an object { &quot;key1&quot;:&quot;value1&quot;, ..., &quot;keyN&quot;:&quot;valueN&quot;}. As query paramereter, send a &quot;key:value&quot; pair for each tag.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X PUT http://rudder.example.com/rudder/api/latest/directives  -d \"source=DirectiveIDSource\" -d \"displayName=Name of New Directive\"",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/directives.md",
    "groupTitle": "Directives"
  },
  {
    "type": "put",
    "url": "/api/directives",
    "title": "3. Create a new Directive",
    "version": "10.0.0",
    "name": "createDirective",
    "group": "Directives",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "TechniqueName",
            "optional": false,
            "field": "techniqueName",
            "description": "<p>The name of the technique you want to use to create your Directive.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "displayName",
            "description": "<p>The name of the Directive to create.</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": true,
            "field": "parameters",
            "description": "<p>The full list of parameters. This parameter can be empty, but the Directive will not be applied.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "shortDescription",
            "description": "<p>Short description of the Directive.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "longDescription",
            "description": "<p>Long description of the Directive.</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "id",
            "defaultValue": "autoGenerated",
            "description": "<p>Define the id of the Directive to create, Rudder will generate an id if this is missing. You should only use it for specific use case.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "defaultValue": "true",
            "description": "<p>Enable the Directive at creation. This parameter can be overriden. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          },
          {
            "group": "Mono",
            "type": "TechniqueVersion",
            "optional": true,
            "field": "techniqueVersion",
            "defaultValue": "latest",
            "description": "<p>Technique version] In which version your technique should be created.</p>"
          },
          {
            "group": "Mono",
            "type": "Int",
            "optional": true,
            "field": "priority",
            "description": "<p>Directive priority. Determines which value to use if there are several Directives based on the same technique applied to a Node.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "policyMode",
            "defaultValue": "default",
            "description": "<p>Policy mode to execute the directive with. Can be &quot;default&quot;, &quot;enforce&quot; or &quot;audit&quot;.</p>"
          }
        ],
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "Tag",
            "optional": true,
            "field": "tags",
            "description": "<p>Tags linked to this directive. As JSON, send an object { &quot;key1&quot;:&quot;value1&quot;, ..., &quot;keyN&quot;:&quot;valueN&quot;}. As query paramereter, send a &quot;key:value&quot; pair for each tag.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X PUT http://rudder.example.com/rudder/api/latest/directives -H \"Content-type: application/json\" -d @directive.json",
        "type": "json"
      },
      {
        "title": "directive.json details:",
        "content": "{\n  \"id\": \"cf2a6c72-18ae-4f82-a12c-0b887792db41\",\n  \"displayName\": \"Example Directive\",\n  \"shortDescription\": \"This in an example Directive to use in Rudder api documentation\",\n  \"longDescription\": \"\",\n  \"techniqueName\": \"genericVariableDefinition\",\n  \"techniqueVersion\": \"2.0\",\n  \"tags\": {\n    \"env\" : \"production\",\n    \"country\" : \"FR\"\n  },\n  \"parameters\": {\n    \"section\": {\n      \"name\": \"sections\",\n      \"sections\": [\n        {\n          \"section\": {\n            \"name\": \"Variable definition\",\n            \"vars\": [\n              {\n                \"var\": {\n                  \"name\": \"GENERIC_VARIABLE_CONTENT\",\n                  \"value\": \"new variable content\"\n                }\n              },\n              {\n                \"var\": {\n                  \"name\": \"GENERIC_VARIABLE_NAME\",\n                  \"value\": \"new_variable\"\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  },\n  \"priority\": 3,\n  \"enabled\": true,\n  \"system\": false,\n  \"policyMode\": \"default\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\":\"createDirective\",\n  \"id\":\"7fb1349e-1f2c-4fca-9c5a-e5858a5b132e\",\n  \"result\":\"success\",\n  \"data\":{\n    \"directives\":[{\n      \"id\": \"cf2a6c72-18ae-4f82-a12c-0b887792db41\",\n      \"displayName\": \"Example Directive\",\n      \"shortDescription\": \"This in an example Directive to use in Rudder api documentation\",\n      \"longDescription\": \"\",\n      \"techniqueName\": \"genericVariableDefinition\",\n      \"techniqueVersion\": \"2.0\",\n      \"tags\": {\n        \"env\" : \"production\",\n        \"country\" : \"FR\"\n      },\n      \"parameters\": {\n        \"section\": {\n          \"name\": \"sections\",\n          \"sections\": [\n            {\n              \"section\": {\n                \"name\": \"Variable definition\",\n                \"vars\": [\n                  {\n                    \"var\": {\n                      \"name\": \"GENERIC_VARIABLE_CONTENT\",\n                      \"value\": \"new variable content\"\n                    }\n                  },\n                  {\n                    \"var\": {\n                      \"name\": \"GENERIC_VARIABLE_NAME\",\n                      \"value\": \"new_variable\"\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      },\n      \"priority\": 3,\n      \"enabled\": true,\n      \"system\": false,\n      \"policyMode\": \"default\"\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/directives.md",
    "groupTitle": "Directives"
  },
  {
    "type": "delete",
    "url": "/api/directives/{id}",
    "title": "5. Delete a Directive",
    "version": "10.0.0",
    "name": "deleteDirective",
    "group": "Directives",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X DELETE http://rudder.example.com/rudder/api/latest/directives/DirectiveID",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/directives.md",
    "groupTitle": "Directives",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Directive.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/directives/{id}",
    "title": "2. Get a Directive details",
    "version": "10.0.0",
    "name": "directiveDetails",
    "group": "Directives",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/directives/DirectiveID",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/directives.md",
    "groupTitle": "Directives",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Directive.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/directives",
    "title": "1. List all Directives",
    "version": "10.0.0",
    "name": "listDirectives",
    "group": "Directives",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/directives",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\":\"listDirectives\",\n  \"result\":\"success\",\n  \"data\":{\n    \"directives\":[{\n      \"id\":\"3877d1c3-d9e6-43cb-aa9d-40961510a34a\",\n      \"displayName\":\"Copy test file shared folder\",\n      \"shortDescription\":\"\",\n      \"longDescription\":\"\\n    this is a looooooooooooooooonnnnnnnnnn\\n\\n\\nggggggggggggggggg description !!\\\"\\\"\\\"\\\"\\\"\\\"\\n  \",\n      \"techniqueName\":\"copyGitFile\",\n      \"techniqueVersion\":\"1.3\",\n      \"parameters\":{\n        \"section\":{\n          \"name\":\"sections\",\n          \"sections\":[{\n            \"section\":{\n              \"name\":\"Copy file and PostHook\",\n              \"sections\":[{\n                \"section\":{\n                  \"name\":\"Copy file\",\n                  \"vars\":[{\n                    \"var\":{\n                      \"name\":\"COPYFILE_COMPARE_METHOD\",\n                      \"value\":\"mtime\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"COPYFILE_DESTINATION\",\n                      \"value\":\"/tmp/test2\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"COPYFILE_GROUP\",\n                      \"value\":\"root\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"COPYFILE_NAME\",\n                      \"value\":\"/tmp/test\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"COPYFILE_OWNER\",\n                      \"value\":\"root\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"COPYFILE_PERM\",\n                      \"value\":\"000\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"COPYFILE_RECURSION\",\n                      \"value\":\"0\"\n                    }\n                  }]\n                }\n              },{\n                \"section\":{\n                  \"name\":\"Post-modification hook\",\n                  \"vars\":[{\n                    \"var\":{\n                      \"name\":\"COPYFILE_POST_HOOK_COMMAND\",\n                      \"value\":\"\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"COPYFILE_POST_HOOK_RUN\",\n                      \"value\":\"false\"\n                    }\n                  }]\n                }\n              }]\n            }\n          }]\n        }\n      },\n      \"priority\":5,\n      \"enabled\":true,\n      \"system\":false,\n      \"policyMode\": \"default\",\n      \"tags\": []\n    },{\n      \"id\":\"e61c0696-172b-46bb-80a9-d6f5ef1d2f85\",\n      \"displayName\":\"test local_copy\",\n      \"shortDescription\":\"\",\n      \"longDescription\":\"\",\n      \"techniqueName\":\"fileManagement\",\n      \"techniqueVersion\":\"2.0\",\n      \"parameters\":{\n        \"section\":{\n          \"name\":\"sections\",\n          \"sections\":[{\n            \"section\":{\n              \"name\":\"File to manage\",\n              \"vars\":[{\n                \"var\":{\n                  \"name\":\"FILE_AND_FOLDER_MANAGEMENT_ACTION\",\n                  \"value\":\"copy\"\n                }\n              },{\n                \"var\":{\n                  \"name\":\"FILE_AND_FOLDER_MANAGEMENT_SOURCE\",\n                  \"value\":\"/vagrant/node.sh\"\n                }\n              },{\n                \"var\":{\n                  \"name\":\"FILE_AND_FOLDER_MANAGEMENT_SYMLINK_ENFORCE\",\n                  \"value\":\"false\"\n                }\n              }],\n              \"sections\":[{\n                \"section\":{\n                  \"name\":\"File\",\n                  \"vars\":[{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_MANAGEMENT_PATH\",\n                      \"value\":\"/root/test\"\n                    }\n                  }]\n                }\n              },{\n                \"section\":{\n                  \"name\":\"File cleaning options\",\n                  \"vars\":[{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_DELETION_DAYS\",\n                      \"value\":\"0\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_DELETION_OPTION\",\n                      \"value\":\"none\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_DELETION_PATTERN\",\n                      \"value\":\".*\"\n                    }\n                  }]\n                }\n              },{\n                \"section\":{\n                  \"name\":\"Permissions\",\n                  \"vars\":[{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_MANAGEMENT_CHECK_PERMISSIONS\",\n                      \"value\":\"false\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_MANAGEMENT_GROUP\",\n                      \"value\":\"\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_MANAGEMENT_OWNER\",\n                      \"value\":\"\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_MANAGEMENT_PERM\",\n                      \"value\":\"000\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_MANAGEMENT_RECURSIVE\",\n                      \"value\":\"1\"\n                    }\n                  }]\n                }\n              },{\n                \"section\":{\n                  \"name\":\"Post-modification hook\",\n                  \"vars\":[{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_MANAGEMENT_POST_HOOK_COMMAND\",\n                      \"value\":\"\"\n                    }\n                  },{\n                    \"var\":{\n                      \"name\":\"FILE_AND_FOLDER_MANAGEMENT_POST_HOOK_RUN\",\n                      \"value\":\"false\"\n                    }\n                  }]\n                }\n              }]\n            }\n          }]\n        }\n      },\n      \"priority\":5,\n      \"enabled\":true,\n      \"system\":false,\n      \"policyMode\": \"default\",\n      \"tags\": []\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/directives.md",
    "groupTitle": "Directives"
  },
  {
    "type": "post",
    "url": "/api/directives/{id}",
    "title": "4. Update a Directive",
    "version": "10.0.0",
    "name": "updateDirective",
    "group": "Directives",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "displayName",
            "description": "<p>Name of the Directive to create.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "shortDescription",
            "description": "<p>Short description of the Directive.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "longDescription",
            "description": "<p>Long description of the Directive.</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": true,
            "field": "parameters",
            "description": "<p>Directive parameters.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "description": "<p>Enable/disable the Directive. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          },
          {
            "group": "Mono",
            "type": "Int",
            "optional": true,
            "field": "priority",
            "description": "<p>Directive priority. Determines which value to use if there are several Directives based on the same technique applied to a Node.</p>"
          },
          {
            "group": "Mono",
            "type": "TechniqueVersion",
            "optional": true,
            "field": "techniqueVersion",
            "description": "<p>Technique Version.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "policyMode",
            "defaultValue": "default",
            "description": "<p>Policy mode to execute the directive with. Can be &quot;default&quot;, &quot;enforce&quot; or &quot;audit&quot;.</p>"
          }
        ],
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "Tag",
            "optional": true,
            "field": "tags",
            "description": "<p>Tags linked to this directive. As JSON, send an object { &quot;key1&quot;:&quot;value1&quot;, ..., &quot;keyN&quot;:&quot;valueN&quot;}. As query paramereter, send a &quot;key:value&quot; pair for each tag.</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Directive.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "# Change long description, priority and a value in parameters\ncurl -H \"X-API-Token: yourToken\" -X POST http://rudder.example.com/rudder/api/latest/directives/cf2a6c72-18ae-4f82-a12c-0b887792db41 -H \"Content-type: application/json\" -d @directive.json",
        "type": "json"
      },
      {
        "title": "directive.json details:",
        "content": "{\n  \"longDescription\": \"Add a loooooooooooong description\",\n  \"parameters\": {\n    \"section\": {\n      \"name\": \"sections\",\n      \"sections\": [\n        {\n          \"section\": {\n            \"name\": \"Variable definition\",\n            \"vars\": [\n              {\n                \"var\": {\n                  \"name\": \"GENERIC_VARIABLE_CONTENT\",\n                  \"value\": \"Change Variable Content\"\n                }\n              },\n              {\n                \"var\": {\n                  \"name\": \"GENERIC_VARIABLE_NAME\",\n                  \"value\": \"new_variable\"\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  },\n  \"priority\": 5\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n  \"action\":\"createDirective\",\n  \"id\":\"7fb1349e-1f2c-4fca-9c5a-e5858a5b132e\",\n  \"result\":\"success\",\n  \"data\":{\n    \"directives\":[{\n      \"id\": \"cf2a6c72-18ae-4f82-a12c-0b887792db41\",\n      \"displayName\": \"Example Directive\",\n      \"shortDescription\": \"This in an example Directive to use in Rudder api documentation\",\n      \"longDescription\": \"Add a loooooooooooong description\",\n      \"techniqueName\": \"genericVariableDefinition\",\n      \"techniqueVersion\": \"2.0\",\n      \"tags\": {\n        \"env\" : \"production\",\n        \"country\" : \"FR\"\n      },\n      \"parameters\": {\n        \"section\": {\n          \"name\": \"sections\",\n          \"sections\": [\n            {\n              \"section\": {\n                \"name\": \"Variable definition\",\n                \"vars\": [\n                  {\n                    \"var\": {\n                      \"name\": \"GENERIC_VARIABLE_CONTENT\",\n                      \"value\": \"Change Variable Content\"\n                    }\n                  },\n                  {\n                    \"var\": {\n                      \"name\": \"GENERIC_VARIABLE_NAME\",\n                      \"value\": \"new_variable\"\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      },\n      \"priority\": 5,\n      \"enabled\": true,\n      \"system\": false,\n      \"policyMode\": \"default\"\n     \n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/directives.md",
    "groupTitle": "Directives"
  },
  {
    "type": "get",
    "url": "/api/groups/tree",
    "title": "8. Get Groups tree",
    "version": "10.0.0",
    "name": "GetGroupTree",
    "group": "Groups",
    "description": "<p>Get all Groups available in Rudder and their cateogries in a Tree</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/groups/tree?prettify=true",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"GetGroupTree\",\n  \"result\": \"success\",\n  \"data\": {\n    \"groupCategories\": {\n      \"id\": \"GroupRoot\",\n      \"name\": \"Root of the group and group categories\",\n      \"description\": \"This is the root category for the groups (both dynamic and static) and group categories\",\n      \"parent\": \"GroupRoot\",\n      \"categories\": [\n        {\n          \"id\": \"SystemGroups\",\n          \"name\": \"System groups\",\n          \"description\": \"That category holds all the system and special target\",\n          \"parent\": \"GroupRoot\",\n          \"categories\": [],\n          \"groups\": [\n            {\n              \"id\": \"hasPolicyServer-root\",\n              \"displayName\": \"All nodes managed by root policy server\",\n              \"description\": \"All nodes known by Rudder directly connected to the root server\",\n              \"query\": {\n                \"select\": \"nodeAndPolicyServer\",\n                \"composition\": \"And\",\n                \"where\": [\n                  {\n                    \"objectType\": \"node\",\n                    \"attribute\": \"policyServerId\",\n                    \"comparator\": \"eq\",\n                    \"value\": \"root\"\n                  }\n                ]\n              },\n              \"nodeIds\": [\n                \"dd404bda-2785-4959-abaa-8f37a0bbd85e\",\n                \"f6223b0e-e2aa-4d1f-b6d1-74de8ea8e513\",\n                \"root\"\n              ],\n              \"dynamic\": true,\n              \"enabled\": true\n            }\n          ]\n        },\n        {\n          \"id\": \"38dd2107-a73b-45fb-916d-e110312abb87\",\n          \"name\": \"production groups\",\n          \"description\": \"\",\n          \"parent\": \"GroupRoot\",\n          \"categories\": [\n            \n          ],\n          \"groups\": [\n            {\n              \"id\": \"79d83ff9-24d8-4be6-b1f7-cbb1c173f7a5\",\n              \"displayName\": \"Linux nodes\",\n              \"description\": \"\",\n              \"query\": {\n                \"select\": \"node\",\n                \"composition\": \"And\",\n                \"where\": [\n                  {\n                    \"objectType\": \"node\",\n                    \"attribute\": \"OS\",\n                    \"comparator\": \"eq\",\n                    \"value\": \"Linux\"\n                  }\n                ]\n              },\n              \"nodeIds\": [\n                \n              ],\n              \"dynamic\": false,\n              \"enabled\": true\n            }\n          ]\n        }\n      ],\n      \"groups\": [\n        {\n          \"id\": \"af208515-c2f2-4577-bbf4-9fffebbe6629\",\n          \"displayName\": \"Test Clients\",\n          \"description\": \"\",\n          \"query\": {\n            \"select\": \"node\",\n            \"composition\": \"Or\",\n            \"where\": [\n              {\n                \"objectType\": \"node\",\n                \"attribute\": \"nodeHostname\",\n                \"comparator\": \"regex\",\n                \"value\": \"servername.*company.net\"\n              },\n              {\n                \"objectType\": \"node\",\n                \"attribute\": \"nodeHostname\",\n                \"comparator\": \"regex\",\n                \"value\": \"lt serverbla.*company.net\"\n              }\n            ]\n          },\n          \"nodeIds\": [\n            \n          ],\n          \"dynamic\": true,\n          \"enabled\": true\n        },\n        {\n          \"id\": \"d7634b2d-7189-422b-9971-24c29b75da46\",\n          \"displayName\": \"Test Clients\",\n          \"description\": \"\",\n          \"query\": {\n            \"select\": \"node\",\n            \"composition\": \"Or\",\n            \"where\": [\n              {\n                \"objectType\": \"node\",\n                \"attribute\": \"nodeHostname\",\n                \"comparator\": \"regex\",\n                \"value\": \"servername.*company.net\"\n              },\n              {\n                \"objectType\": \"node\",\n                \"attribute\": \"nodeHostname\",\n                \"comparator\": \"regex\",\n                \"value\": \"lt serverbla.*company.net\"\n              }\n            ]\n          },\n          \"nodeIds\": [\n            \n          ],\n          \"dynamic\": true,\n          \"enabled\": true\n        }\n      ]\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups"
  },
  {
    "type": "put",
    "url": "/api/groups",
    "title": "7. Clone a Group",
    "version": "10.0.0",
    "name": "cloneGroup",
    "group": "Groups",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "UUID",
            "optional": false,
            "field": "source",
            "description": "<p>The id of the Group the clone will be based onto. if this parameter is missing there will be only a Group creation</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "displayName",
            "description": "<p>Name of the Group to create.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Group.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "dynamic",
            "defaultValue": "true",
            "description": "<p>Determine if the group reload automatically or not. Used to be 'isDynamic' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": true,
            "field": "query",
            "description": "<p>Query to get Nodes. Empty Query is possible, but this group will not have nodes anymore</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "id",
            "defaultValue": "autoGenerated",
            "description": "<p>Define the id of the Group to create, Rudder will generate an id if this is missing. You should only use it for specific use case</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "defaultValue": "true",
            "description": "<p>Enable/Disable the Group at creation. But this parameter can be overriden. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X PUT 'http://rudder.example.com/rudder/api/latest/groups' -d \"groups=GroupID\"",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups"
  },
  {
    "type": "put",
    "url": "/api/groups",
    "title": "3. Create a new Group",
    "version": "10.0.0",
    "name": "createGroup",
    "group": "Groups",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "GroupCategoryID",
            "optional": false,
            "field": "category",
            "description": "<p>In which category this nodeGroup should be created in</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "displayName",
            "description": "<p>Name of the Group to create.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Group.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "dynamic",
            "defaultValue": "true",
            "description": "<p>Determine if the group reload automatically or not. Used to be 'isDynamic' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": true,
            "field": "query",
            "description": "<p>Query to get Nodes. Empty Query is possible, but this group will not have nodes anymore</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "id",
            "defaultValue": "autoGenerated",
            "description": "<p>Define the id of the Group to create, Rudder will generate an id if this is missing. You should only use it for specific use case</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "defaultValue": "true",
            "description": "<p>Enable/Disable the Group at creation. But this parameter can be overriden. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X PUT http://rudder.example.com/rudder/api/latest/groups -H \"Content-Type: application/json\" -d @group.json",
        "type": "json"
      },
      {
        "title": "group.json details:",
        "content": "{\n \"category\": \"c355f46e-11b0-4c7a-aedd-6a5f3b0303b6\",\n \"displayName\": \"Example group\",\n \"description\": \"This is an example Group to use in Rudder api documentation\",\n \"query\":\n   {\"select\":\"node\",\"composition\":\"Or\",\"where\":\n     [\n       {\"objectType\":\"node\",\"attribute\":\"nodeId\",\"comparator\":\"eq\",\"value\":\"1ae6ccfe-00ba-44c0-b1aa-362d2f386032\"},\n       {\"objectType\":\"node\",\"attribute\":\"nodeId\",\"comparator\":\"eq\",\"value\":\"e4a80fd8-373e-45fc-ad94-2ae618be32e3\"}\n     ]\n   },\n  \"dynamic\": true,\n  \"enabled\": true\n}",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups"
  },
  {
    "type": "put",
    "url": "/api/groups/categories",
    "title": "12. Create a new Group category.",
    "version": "10.0.0",
    "name": "createGroupCategory",
    "group": "Groups",
    "description": "<p>Create a new Group category in Rudder. You can define all of its parameters, but you need at least its name</p>",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Name of the Group category.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Group category.</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "parent",
            "description": "<p>Id of the parent Group category</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X PUT 'http://rudder.example.com/rudder/api/latest/groups/categories?prettify=true' -d \"name=new category name\" -d \"parent=4306143d-eabf-4478-b7b1-1616f4aa02b5\" -d \"description=A new category created via API'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"createGroupCategory\",\n  \"result\": \"success\",\n  \"data\": {\n    \"groupCategories\": {\n      \"id\": \"370521d0-b05c-4ba6-b3e9-c391887897a4\",\n      \"name\": \"new category name\",\n      \"description\": \"A new category created via API\",\n      \"parent\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n      \"categories\": [],\n      \"groups\": []\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups"
  },
  {
    "type": "delete",
    "url": "/api/groups/{id}",
    "title": "6. Delete a Group",
    "version": "10.0.0",
    "name": "deleteGroup",
    "group": "Groups",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X DELETE 'http://rudder.example.com/rudder/api/latest/groups/GroupID'",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>The id of the Group you want</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/groups/categories/{id}",
    "title": "10. Delete a Group category",
    "version": "10.0.0",
    "name": "deleteGroupCategory",
    "group": "Groups",
    "description": "<p>Delete a Group category. It must have no child groups and no children categories</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X DELETE 'http://rudder.example.com/rudder/api/latest/groups/categories/4306143d-eabf-4478-b7b1-1616f4aa02b5?prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"deleteGroupCategory\",\n  \"result\": \"success\",\n  \"data\": {\n    \"groupCategories\": {\n      \"id\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n      \"name\": \"FR groups\",\n      \"description\": \"\",\n      \"parent\": \"rootGroupCategory\",\n      \"categories\": [\n        \"6c676103-0abf-4614-b0bd-19768e1bec15\"\n      ],\n      \"groups\": [\n        \"16fd4e1a-0364-4123-8a84-ff34caee5bf6\"\n      ]\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule category</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/groups/categories/{id}",
    "title": "9. Get a Group category details",
    "version": "10.0.0",
    "name": "getGroupCategoryDetails",
    "group": "Groups",
    "description": "<p>Get the details of a Group category, whose ID is specified in the URL</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/latest/groups/categories/4306143d-eabf-4478-b7b1-1616f4aa02b5?prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"getGroupCategoryDetails\",\n  \"result\": \"FR Groups\",\n  \"data\": {\n    \"groupCategories\": {\n      \"id\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n      \"name\": \"another\",\n      \"description\": \"\",\n      \"parent\": \"rootGroupCategory\",\n      \"categories\": [\n        \"6c676103-0abf-4614-b0bd-19768e1bec15\"\n      ],\n      \"groups\": [\n        \"16fd4e1a-0364-4123-8a84-ff34caee5bf6\"\n      ]\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule category</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/groups/{id}",
    "title": "2. Get Group details",
    "version": "10.0.0",
    "name": "groupDetails",
    "group": "Groups",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/latest/groups/GroupID'",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>The id of the Group you want</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/groups",
    "title": "1. List all Groups",
    "version": "10.0.0",
    "name": "listGroups",
    "group": "Groups",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/groups",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups"
  },
  {
    "type": "post",
    "url": "/api/groups/{id}/reload",
    "title": "5. Reload a Group",
    "version": "10.0.0",
    "name": "reloadGroup",
    "group": "Groups",
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>The id of the Group you want</p>"
          }
        ]
      }
    }
  },
  {
    "type": "post",
    "url": "/api/groups/{id}",
    "title": "4. Update a Group",
    "version": "10.0.0",
    "name": "updateGroup",
    "group": "Groups",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "displayName",
            "description": "<p>Name of the Group.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Group.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "dynamic",
            "description": "<p>Determine if the group reload automatically or not. Used to be 'isDynamic' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          },
          {
            "group": "Mono",
            "type": "JSON",
            "optional": true,
            "field": "query",
            "description": "<p>Query to get Nodes. Empty Query is possible, but this group will not have nodes anymore.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "description": "<p>Enable/disable the Group. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>The id of the Group you want</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "Update display name: \ncurl -H \"X-API-Token: yourToken\" -X POST 'http://rudder.example.com/rudder/api/latest/groups/GroupID' -d \"displayName=Name of New Group\"",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups"
  },
  {
    "type": "post",
    "url": "/api/groups/categories/{id}",
    "title": "11. Update a Group Category",
    "version": "10.0.0",
    "name": "updateGroupCategory",
    "group": "Groups",
    "description": "<p>Modify any parameters of a Group category. Missing parameters means to not modify that parameter</p>",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "name",
            "description": "<p>Name of the Group category.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Group category.</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "Parent",
            "description": "<p>Id of the parent Group category</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule category</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST 'http://rudder.example.com/rudder/api/latest/groups/categories/4306143d-eabf-4478-b7b1-1616f4aa02b5?prettify=true' -d \"name=new category name\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"updateGroupCategory\",\n  \"result\": \"success\",\n  \"data\": {\n    \"groupCategories\": {\n      \"id\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n      \"name\": \"new category name\",\n      \"description\": \"\",\n      \"parent\": \"rootGroupCategory\",\n      \"categories\": [\n        \"6c676103-0abf-4614-b0bd-19768e1bec15\"\n      ],\n      \"groups\": [\n        \"16fd4e1a-0364-4123-8a84-ff34caee5bf6\"\n      ]\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/groups.md",
    "groupTitle": "Groups"
  },
  {
    "type": "Response format documentation",
    "url": "/api/nodes/pending,/api/nodes,/api/nodes/{nodeId}",
    "title": "0. Node information format",
    "version": "10.0.0",
    "group": "Nodes",
    "description": "<p>Here, we are describing all the available properties on node details on each of the three level: minimal, default and full. As explain in documentation for the &quot;include&quot; parameters in relevants API call, you can also specify the list of included first level properties you want to get.</p> <p>A value is returned <em>only</em> if it is defined for the node. For example, &quot;license&quot; are rarelly defined for Linux software and so software won't have that data.</p>",
    "parameter": {
      "fields": {
        "Properties returned by include=minimal": [
          {
            "group": "IncludeMinimal",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Rudder unique node identifier</p>"
          },
          {
            "group": "IncludeMinimal",
            "type": "String",
            "optional": false,
            "field": "hostname",
            "description": "<p>Fully qualified name of the node</p>"
          },
          {
            "group": "IncludeMinimal",
            "type": "String",
            "optional": false,
            "field": "status",
            "description": "<p>Status of the node in Rudder (pending, accepted, deleted)</p>"
          }
        ],
        "Properties returned by include=default": [
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "architectureDescription",
            "description": "<p>Information about CPU architecture (32/64 bits)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>A human intended description of the node</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "JSON",
            "optional": false,
            "field": "ipAddresses",
            "description": "<p>Array of all IPs (v4 and v6) for the node</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "lastRunDate",
            "description": "<p>(Rudder 5.0.9 and up) Date and time (yyyy-MM-dd HH:mm) of the last run, if one is available (node time)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "lastInventoryDate",
            "description": "<p>Date and time (yyyy-MM-dd HH:mm) of the last generated inventory report (node time)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "JSON",
            "optional": true,
            "field": "machine",
            "description": "<p>Information about the underlying machine</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "machine.id",
            "description": "<p>Rudder unique identifier for the machine</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "machine.type",
            "description": "<p>Phtsical or Virtual machine</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "machine.provider",
            "description": "<p>In the case of VM, the VM technologie</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "machine.manufacturer",
            "description": "<p>Information about machine manufacturer</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "machine.serialNumber",
            "description": "<p>If available, a unique identifier provided by the machine</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "JSON",
            "optional": false,
            "field": "os",
            "description": "<p>Rudder unique node identifier</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": false,
            "field": "os.type",
            "description": "<p>Familly of the OS (Windows/Linux/AIX/FreeBSD/...)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": false,
            "field": "os.name",
            "description": "<p>OS name (distribution for Linux, name for Windows, ...)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": false,
            "field": "os.version",
            "description": "<p>OS Version (depend of the OS Familly and name)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": false,
            "field": "os.fullName",
            "description": "<p>The long, detailled name as reported by the OS</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "os.servicePack",
            "description": "<p>Service pack level</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": false,
            "field": "os.kernelVersion",
            "description": "<p>Version of the kernel</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "JSON",
            "optional": false,
            "field": "managementTechnology",
            "description": "<p>Array of management agents and their type running on the node</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "JSON",
            "optional": false,
            "field": "managementTechnology.name",
            "description": "<p>Agent name (Community, enterprise, ..)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "JSON",
            "optional": false,
            "field": "managementTechnology.version",
            "description": "<p>Agent version</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": false,
            "field": "policyServerId",
            "description": "<p>Rudder unique ID of the policy server from which the node get its policies</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "JSON",
            "optional": false,
            "field": "properties",
            "description": "<p>Array of node properties (either set by user or filled by third party sources)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": false,
            "field": "properties.name",
            "description": "<p>Property name</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "JSON",
            "optional": false,
            "field": "properties.value",
            "description": "<p>Property value, which can be a string or a full-fledge JSON data object</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "policyMode",
            "description": "<p>Rudder policy mode for the node (&quot;enforce&quot;, &quot;audit&quot;, or &quot;default&quot; if the node follows the global configuration)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "ram",
            "description": "<p>Available RAM (in MB)</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "JSON",
            "optional": true,
            "field": "timezone",
            "description": "<p>Node time zone information</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "timezone.name",
            "description": "<p>Timezone name</p>"
          },
          {
            "group": "IncludeDefault",
            "type": "String",
            "optional": true,
            "field": "timezone.offset",
            "description": "<p>Timezone offset to UTC</p>"
          }
        ],
        "Properties returned by include=full": [
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "accounts",
            "description": "<p>Array of user accounts declared in the node</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "bios",
            "description": "<p>BIOS information</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "bios.name",
            "description": "<p>BIOS name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "bios.version",
            "description": "<p>BIOS version</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "bios.editor",
            "description": "<p>BIOS editor</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "bios.quantity",
            "description": "<p>Number of BIOS on the machine</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "bios.description",
            "description": "<p>System provided description of the BIOS (long name)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "bios.releaseDate",
            "description": "<p>Release date of the BIOS</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "controllers",
            "description": "<p>Array of physical controller information objects</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "controllers.name",
            "description": "<p>Controller name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "controllers.type",
            "description": "<p>Controller type</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "controllers.quantity",
            "description": "<p>Quantity of that controller</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "controllers.description",
            "description": "<p>System provided description of the controller</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "controllers.manufacturer",
            "description": "<p>Controller manufacturer</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "environmentVariables",
            "description": "<p>Array of environement variable objects defined on the node in the context of the agent</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "environmentVariables.name",
            "description": "<p>Environment Variable name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "environmentVariables.value",
            "description": "<p>Environment Variable value</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "fileSystems",
            "description": "<p>Array of file system objects declared on the node.</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "fileSystems.name",
            "description": "<p>Type of file system (ext4, swap, etc)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "fileSystems.mountPoint",
            "description": "<p>Mount point</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "fileSystems.description",
            "description": "<p>Description of the file system</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "fileSystems.fileCount",
            "description": "<p>Number of files</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "fileSystems.freeSpace",
            "description": "<p>Free space remaining</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "fileSystems.totalSpace",
            "description": "<p>Total space allocated to the file system</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "managementTechnologyDetails",
            "description": "<p>Array of additionnal information about management technologie</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "managementTechnologyDetails.cfengineKeys",
            "description": "<p>Array of public key used by the agent</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "managementTechnologyDetails.cfengineUser",
            "description": "<p>User account used by the agent</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "memories",
            "description": "<p>Array of memory slot information objects</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "memories.name",
            "description": "<p>Name of the memory slot or memory module</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "memories.speed",
            "description": "<p>Memory speed (frequency)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "memories.type",
            "description": "<p>Memory slot type</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "memories.caption",
            "description": "<p>Manufacturer provided information about the module</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "memories.quantity",
            "description": "<p>Number of modules in that slot</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "memories.capacity",
            "description": "<p>Size of modules</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "memories.slotNumber",
            "description": "<p>Slot number</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "memories.description",
            "description": "<p>System provided description</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "memories.serialNumber",
            "description": "<p>Serial number of the module.</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "networkInterfaces",
            "description": "<p>Detailled information about registered network interfaces on the node</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "networkInterfaces.name",
            "description": "<p>Interface name (for ex &quot;eth0&quot;)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "networkInterfaces.mask",
            "description": "<p>network interface mask</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "networkInterfaces.type",
            "description": "<p>information about the type of network interface</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "networkInterfaces.speed",
            "description": "<p>information about synchronisation speed</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "networkInterfaces.status",
            "description": "<p>network interface status (enable or not, up or down)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "networkInterfaces.dhcpServer",
            "description": "<p>DHCP server managing that network interface</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "networkInterfaces.macAddress",
            "description": "<p>MAC addresse of the network interface</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "networkInterfaces.ipAddresses",
            "description": "<p>Array of IP addresses for that network interface</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "ports",
            "description": "<p>Array of physical port information objects</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "ports.name",
            "description": "<p>Port name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "ports.type",
            "description": "<p>Port type</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "ports.quantity",
            "description": "<p>quantity of similar ports</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "ports.description",
            "description": "<p>system provided description of the port</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "processes",
            "description": "<p>Array of process information objects</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processes.pid",
            "description": "<p>PID of the process</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processes.tty",
            "description": "<p>TTY to which the process is attached</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processes.name",
            "description": "<p>Process name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processes.user",
            "description": "<p>User account who started the process</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processes.started",
            "description": "<p>Status of the process (finished, running, etc)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processes.memory",
            "description": "<p>Memory allocated to the process (at inventory time)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processes.cpuUsage",
            "description": "<p>CPU used by the process (at inventory time)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processes.virtualMemory",
            "description": "<p>Virtual memory allocated to the process (at inventory time)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processes.description",
            "description": "<p>System provided description about the process</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "processors",
            "description": "<p>Array of CPU information objects.</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.name",
            "description": "<p>CPU name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.arch",
            "description": "<p>CPU architecture type</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.model",
            "description": "<p>CPU model</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.familyName",
            "description": ""
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.manufacturer",
            "description": ""
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.quantity",
            "description": "<p>Number of CPU with these features</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.core",
            "description": "<p>Number of core for that CPU</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.speed",
            "description": "<p>Speed (frequency) of the CPU</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.cpuid",
            "description": "<p>identifier of the CPU</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.thread",
            "description": "<p>Number of thread by core for the CPU</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.externalClock",
            "description": "<p>External clock used by the CPU</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.stepping",
            "description": "<p>Stepping or power management information</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "processors.description",
            "description": "<p>system provided description of the CPU</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSONT",
            "optional": true,
            "field": "slots",
            "description": "<p>Array of physical extension slot information objects</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "slots.name",
            "description": "<p>Slot name or identifier</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "slots.status",
            "description": "<p>Slot status (used, powered, etc)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "slots.quantity",
            "description": "<p>quantity of similar slots</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "slots.description",
            "description": "<p>system provided description of the slots</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "software",
            "description": "<p>Array of software on the node. This can be huge (thousands)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.name",
            "description": "<p>Name of the software (as reported by the node)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.version",
            "description": "<p>Version of the software</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.editor",
            "description": "<p>Editor of the software</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.description",
            "description": "<p>A description of the software</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.releaseDate",
            "description": "<p>Release date of the software</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "software.license",
            "description": "<p>Information about the license</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.license.oem",
            "description": "<p>Is this an OEM license (and information)</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.license.name",
            "description": "<p>License name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.license.productId",
            "description": "<p>License product identifier</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.license.productKey",
            "description": "<p>License key</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.license.description",
            "description": "<p>License description</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "software.license.expirationDate",
            "description": "<p>License expiration date</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "sound",
            "description": "<p>Array of sound card information object</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "sound.name",
            "description": "<p>Sound card name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "sound.quantity",
            "description": "<p>quantity of similar sound cards</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "sound.description",
            "description": "<p>system provided description of the sound card</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "storage",
            "description": "<p>Array of storage (disks) information objects</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "storage.name",
            "description": "<p>Storage name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "storage.type",
            "description": "<p>Storage type</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "storage.size",
            "description": "<p>Storage size in MB</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "storage.model",
            "description": "<p>Storage model</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "storage.firmware",
            "description": "<p>Storage firmware information</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "storage.quantity",
            "description": "<p>quantity of similar storage</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "storage.description",
            "description": "<p>system provided information about the storage</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "storage.manufacturer",
            "description": "<p>Storage manufacturer</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "storage.serialNumber",
            "description": "<p>Storage serial number</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "videos",
            "description": "<p>Array of video card information objects</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "videos.name",
            "description": "<p>Video card name</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "videos.memory",
            "description": "<p>quantity of memory for that video card</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "videos.chipset",
            "description": "<p>information about video card chipset</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "videos.quantity",
            "description": "<p>quantity of similar video cards</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "videos.resolution",
            "description": "<p>resolution used by that video card at inventory time</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "videos.description",
            "description": "<p>system provided description for that video card</p>"
          },
          {
            "group": "IncludeFull",
            "type": "JSON",
            "optional": true,
            "field": "virtualMachines",
            "description": "<p>Array of hosted virtual machine information objects</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "virtualMachines.name",
            "description": "<p>Name of the hosted virtual machine</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "virtualMachines.type",
            "description": "<p>Type of the hosted virtual machine</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "virtualMachines.uuid",
            "description": "<p>Unique identifier of the hosted virtual machine</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "virtualMachines.vcpu",
            "description": "<p>Number of virtual CPU allocated to the hosted virtual machine</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "virtualMachines.owner",
            "description": "<p>Owner of the hosted virtual machine</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "virtualMachines.status",
            "description": "<p>Status (up, starting, etc) of the hosted virtual machine</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "virtualMachines.memory",
            "description": "<p>Memory allocated to the hosted virtual machine</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "virtualMachines.subsystem",
            "description": "<p>Technologie of the hosted virtual machine</p>"
          },
          {
            "group": "IncludeFull",
            "type": "String",
            "optional": true,
            "field": "virtualMachines.description",
            "description": "<p>system provided description of the hosted virtual machine</p>"
          }
        ]
      }
    },
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes",
    "name": "Response_format_documentationApiNodesPendingApiNodesApiNodesNodeid"
  },
  {
    "type": "get",
    "url": "/api/nodes/{id}",
    "title": "4. Get Node details",
    "version": "10.0.0",
    "name": "acceptedNodeDetails",
    "group": "Nodes",
    "parameter": {
      "fields": {
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "String",
            "optional": true,
            "field": "include",
            "defaultValue": "default",
            "description": "<p>Level of information to include from the node inventory. Some base levels are defined (minimal, default, full). You can add fields you want to a base level by adding them to the list, possible values are keys from json answer. If you don't provide a base level, they will be added to default base level, so if you only want os details, use &quot;minimal,os&quot; as the value for this parameter</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Node.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/nodes/NodeID\\?include=full",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"nodeDetails\",\n  \"id\": \"root\",\n  \"result\": \"success\",\n  \"data\": {\n    \"nodes\": [\n      {\n        \"architectureDescription\": \"x86_64-linux-thread-multi\",\n        \"memories\": [\n          {\n            \"slotNumber\": \"1\",\n            \"description\": \"DIMM (Multi-bit ECC)\"\n          }\n        ],\n        \"ram\": 996,\n        \"accounts\": [\n          \"ftp\",\n          \"postfix\",\n        ],\n        \"managementTechnology\": [\n          {\n            \"name\": \"CFEngine Community\"\n          }\n        ],\n        \"ipAddresses\": [\n          \"127.0.0.1\",\n          \"192.168.170.86\"\n        ],\n        \"fileSystems\": [\n          {\n            \"name\": \"swap\",\n            \"totalSpace\": 2015\n          },\n          {\n            \"name\": \"ext4\",\n            \"freeSpace\": 385,\n            \"totalSpace\": 484,\n            \"mountPoint\": \"/boot\"\n          },\n          {\n            \"name\": \"ext4\",\n            \"freeSpace\": 8477,\n            \"totalSpace\": 13646,\n            \"mountPoint\": \"/\"\n          }\n        ],\n        \"managementTechnologyDetails\": {\n          \"cfengineKeys\": [\n            \"MIIBCAKCAQEAv40NlDNdJjHMSJEzDowgWzHcmq2PSqp8eA+brgWpxaqPq3uRO8JWb/YFFbeVQhMF0AyhwpMA048Jbs0WMp1+E4OShsvEeDJJPX1ohc/mmyxHaeW/SvgQ3YhQksBCMkwZK7Xjh73vsCTSbgJewEbJomhaW7uIt7WJeJW5fge4Nrr17MMQqSXZrzg4Q9BwVwQ4zEGnP3xwBFOoPc6N1q2FkIbv7oO53IfiiCvFhuf6mQPhN6SnFjybJ4SSWjh4tSAnGKN2TGbV8csHbJYOXn+/4EYXTNiYBYu2SC2E/j1hew25HeIs5zUbl3iOu+6PcVugeH9pmRQghekLWWZGXUltMwIBIw==\"\n          ],\n          \"cfengineUser\": \"root\"\n        },\n        \"os\": {\n          \"type\": \"Linux\",\n          \"name\": \"Centos\",\n          \"version\": \"6.5\",\n          \"fullName\": \"CentOS release 6.5 (Final)\",\n          \"kernelVersion\": \"2.6.32-431.20.3.el6.x86_64\"\n        },\n        \"software\": [\n          {\n            \"name\": \"libpciaccess\",\n            \"editor\": \"CentOS\",\n            \"version\": \"0.13.1-2.el6\",\n            \"description\": \"PCI access library\"\n          },\n          {\n            \"name\": \"libXrender\",\n            \"editor\": \"CentOS\",\n            \"version\": \"0.9.7-2.el6\",\n            \"description\": \"X.Org X11 libXrender runtime library\"\n          },\n          {\n            \"name\": \"dbus-libs\",\n            \"editor\": \"CentOS\",\n            \"version\": \"1.2.24-7.el6_3\",\n            \"description\": \"Libraries for accessing D-BUS\"\n          },\n          [...]\n          {\n            \"name\": \"rudder-webapp\",\n            \"editor\": \"Normation\",\n            \"version\": \"2.10.5.release-1.EL.6\",\n            \"description\": \"Configuration management and audit tool - webapp\"\n          },\n          {\n            \"name\": \"rudder-jetty\",\n            \"editor\": \"Normation\",\n            \"version\": \"2.10.5.release-1.EL.6\",\n            \"description\": \"Configuration management and audit tool - Jetty application server\"\n          }\n        ],\n        \"processors\": [\n          {\n            \"name\": \"QEMU Virtual CPU version 1.1.2\",\n            \"core\": 1,\n            \"speed\": 2000,\n            \"cpuid\": \"23 06 00 00 FD FB 8B 07\",\n            \"model\": 2,\n            \"thread\": 1,\n            \"stepping\": 3,\n            \"quantity\": 1,\n            \"familyName\": \"Other\",\n            \"manufacturer\": \"Intel\"\n          }\n        ],\n        \"status\": \"accepted\",\n        \"bios\": [\n          {\n            \"name\": \"Bochs\",\n            \"editor\": \"Bochs\",\n            \"version\": \"Bochs\",\n            \"quantity\": 1,\n            \"releaseDate\": \"2007-01-01 00:00\"\n          }\n        ],\n        \"networkInterfaces\": [\n          {\n            \"name\": \"lo\",\n            \"status\": \"Up\",\n            \"macAddress\": \"00:00:00:00:00:00\",\n            \"ipAddresses\": [\n              \"127.0.0.1\"\n            ]\n          },\n          {\n            \"name\": \"eth0\",\n            \"status\": \"Up\",\n            \"macAddress\": \"52:54:00:1f:e4:16\",\n            \"ipAddresses\": [\n              \"192.168.170.86\"\n            ]\n          }\n        ],\n        \"lastInventoryDate\": \"2014-09-08 00:52\",\n        \"environmentVariables\": {\n          \"_\": \"/opt/rudder/bin/perl\",\n          \"HOSTNAME\": \"my-server-rudder.com\",\n          \"SHLVL\": \"15\",\n          \"LC_ALL\": \"C\",\n          \"DEBIAN_FRONTEND\": \"noninteractive\",\n          \"MAIL\": \"/var/spool/mail/root\",\n          \"HOME\": \"/root\",\n          \"LANG\": \"C\",\n          \"LESSOPEN\": \"|/usr/bin/lesspipe.sh %s\",\n          \"HISTCONTROL\": \"ignoredups\",\n          \"LOGNAME\": \"root\",\n          \"PWD\": \"/var/rudder\",\n          \"SHELL\": \"/bin/sh\",\n          \"USER\": \"root\",\n          \"HISTSIZE\": \"1000\",\n          \"PATH\": \"/opt/rudder/bin/:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/var/rudder/cfengine-community/bin:/var/rudder/cfengine-community/bin:/var/rudder/cfengine-community/bin\",\n          \"G_BROKEN_FILENAMES\": \"1\"\n        },\n        \"storage\": [\n          {\n            \"name\": \"vda\",\n            \"type\": \"disk\",\n            \"quantity\": 1,\n            \"description\": \"Virtual\",\n            \"manufacturer\": \"6900\"\n          }\n        ],\n        \"id\": \"root\",\n        \"processes\": [\n          {\n            \"pid\": 264,\n            \"tty\": \"?\",\n            \"name\": \"[jbd2/dm-0-8]\",\n            \"user\": \"root\",\n            \"started\": \"2014-07-30 1:41\",\n            \"memory\": 0.0,\n            \"cpuUsage\": 0.0,\n            \"virtualMemory\": 0\n          },\n          {\n            \"pid\": 23434,\n            \"tty\": \"?\",\n            \"name\": \"postgres: rudder rudder 127.0.0.1(41648) idle\",\n            \"user\": \"postgres\",\n            \"started\": \"2014-08-19 3:22\",\n            \"memory\": 3.700000047683716,\n            \"cpuUsage\": 0.0,\n            \"virtualMemory\": 237428\n          },\n          [...]\n          {\n            \"pid\": 9,\n            \"tty\": \"?\",\n            \"name\": \"[khelper]\",\n            \"user\": \"root\",\n            \"started\": \"2014-07-30 0:00\",\n            \"memory\": 0.0,\n            \"cpuUsage\": 0.0,\n            \"virtualMemory\": 0\n          },\n          {\n            \"pid\": 265,\n            \"tty\": \"?\",\n            \"name\": \"[ext4-dio-unwrit]\",\n            \"user\": \"root\",\n            \"started\": \"2014-07-30 0:00\",\n            \"memory\": 0.0,\n            \"cpuUsage\": 0.0,\n            \"virtualMemory\": 0\n          }\n        ],\n        \"hostname\": \"my-server-rudder.com\",\n        \"machine\": {\n          \"id\": \"A5D66CFA-F6FB-C7B3-553E-25D69A92ABD5\",\n          \"type\": \"Virtual\",\n          \"provider\": \"qemu\"\n        },\n        \"policyServerId\": \"root\"\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes"
  },
  {
    "type": "post",
    "url": "/api/nodes/{id}/applyPolicy",
    "title": "8. Trigger an agent run",
    "version": "10.0.0",
    "name": "applyPolicy",
    "group": "Nodes",
    "parameter": {
      "fields": {
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "class",
            "optional": false,
            "field": "classes",
            "description": "<p>Set class passed as parameter to make it available during agent run.</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Node.</p>"
          }
        ]
      }
    },
    "description": "<p>This API allows to trigger an agent run on the target node. Response is a stream of the actual agent run on the node (no json output).</p>",
    "examples": [
      {
        "title": "Run agent  ",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST  -H \"Content-Type: application/json\" https://rudder.example.com/rudder/api/latest/nodes/root/applyPolicy",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n\nRudder agent 4.1.0~alpha1~git201701101529-jessie0 (CFEngine Core 3.10.0)\nNode uuid: root\nStart execution with config [20170110-161552-3325af7a]\n\nM| State         Technique                 Component                 Key                Message\nE| compliant     Common                    Update                                       Rudder ncf instance already up to date on this root server. No action required.\nE| compliant     Common                    ncf Initialization                           The ncf initialization was correct\nE| compliant     Common                    Security parameters                          The internal environment security is acceptable\nE| compliant     Common                    Red Button                                   Red Button is not in effect, continuing as normal...\nE| n/a           Common                    Process checking                             CFEngine proccesses check is done by the rudder-agent CRON job\nE| compliant     Common                    CRON Daemon                                  Cron daemon status was correct\nE| compliant     Common                    Log system for reports                       Logging system for report centralization is already correctly configured\nE| compliant     Common                    Binaries update                              The CFEngine binaries in /var/rudder/cfengine-community/bin are up to date\nE| compliant     DistributePolicy          Configure ncf                                Configure ncf was correct\nE| compliant     DistributePolicy          Propagate promises                           All files have been propagated\nE| compliant     DistributePolicy          Send inventories to CMDB                     No inventory to send\nE| compliant     Inventory                 inventory                                    Next inventory scheduled between 00:00 and 06:00\nE| compliant     server-roles              Check logrotate configur|                    The logrotate configuration is correct\nE| compliant     server-roles              Check LDAP in rudder-web|                    The Rudder Webapp configuration files are OK (checked LDAP password)\nE| compliant     server-roles              Check LDAP credentials                       The OpenLDAP configuration file is OK (checked rootdn password)\nE| compliant     server-roles              Check SQL in rudder-weba|                    The Rudder Webapp configuration files are OK (checked SQL password)\nE| compliant     server-roles              Check SQL credentials                        The Rudder PostgreSQL user account's password is correct and works\nE| compliant     server-roles              Check rudder-passwords.c|                    The Rudder passwords file is present and secure\nE| compliant     server-roles              Check allowed networks c|                    The Rudder allowed networks configuration is OK\nE| compliant     server-roles              Check WebDAV credentials                     The Rudder WebDAV user and password are OK\nE| compliant     server-roles              Check apache process                         Check apache process running was correct\nE| compliant     server-roles              Check apache boot script                     Check apache boot starting parameters was correct\nE| compliant     server-roles              Check jetty process                          Check jetty process running was correct\nE| compliant     server-roles              Check configuration-repo|                    The /var/rudder/configuration-repository directory is present\nE| compliant     server-roles              Check configuration-repo|                    The /var/rudder/configuration-repository GIT lock file is not present or not older than 5 minutes\nE| compliant     server-roles              Check rudder status                          The http://localhost:8080/rudder/api/status web application is running\nE| compliant     server-roles              Check endpoint status                        The http://localhost:8080/endpoint/api/status web application is running\nE| compliant     server-roles              Check slapd process                          Check slapd process running was correct\nE| compliant     server-roles              Check PostgreSQL configu|                    There is no need of specific postgresql configuration on this system\nE| compliant     server-roles              Check postgresql process                     Check postgresql process running was correct\nE| compliant     server-roles              Check postgresql boot sc|                    Check postgresql boot starting parameters was correct\nE| n/a           server-roles              Send metrics to rudder-p|                    Sending metrics to rudder-project is not enabled. Skipping.\n\n## Summary #####################################################################\n32 components verified in 4 directives\n   => 32 components in Enforce mode\n         -> 30 compliant\n               -> 2 not-applicable\n               execution time: 2.39s\n################################################################################",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes"
  },
  {
    "type": "post",
    "url": "/api/nodes/applyPolicy",
    "title": "7. Trigger all agent run",
    "version": "10.0.0",
    "name": "applyPolicyAllNodes",
    "group": "Nodes",
    "parameter": {
      "fields": {
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "class",
            "optional": false,
            "field": "classes",
            "description": "<p>Set class passed as parameter to make it available during agent run.</p>"
          }
        ]
      }
    },
    "description": "<p>This API allows to trigger an agent run on the target node. Response contains a json stating if agent could be started on each node, but not if the run went fine and do not display any output from it. You can see the result of the run in Rudder web interface or in the each agent logs</p>",
    "examples": [
      {
        "title": "Run agent  ",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST  -H \"Content-Type: application/json\" https://rudder.example.com/rudder/api/latest/nodes/applyPolicy",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"applyPolicyAllNodes\",\n  \"result\": \"success\",\n  \"data\": [\n    {\n      \"id\": \"edd9a756-ac7e-4820-8e75-83225ebcabec\",\n      \"hostname\": \"relay.rudder.local\",\n      \"result\": \"Started\"\n    },\n    {\n      \"id\": \"root\",\n      \"hostname\": \"server.rudder.local\",\n      \"result\": \"Started\"\n    }\n  ]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes"
  },
  {
    "type": "post",
    "url": "/api/nodes/pending/{id}",
    "title": "5. Change pending Node status",
    "version": "10.0.0",
    "name": "changeNodeStatus",
    "group": "Nodes",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "status",
            "description": "<p>The new status of the node (refused/accepted)</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Node.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST https://rudder.example.com/rudder/api/latest/nodes/pending/NodeID -d \"status=accepted\"",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes"
  },
  {
    "type": "delete",
    "url": "/api/nodes/{id}",
    "title": "7. Delete Node",
    "version": "10.0.0",
    "name": "deleteNode",
    "group": "Nodes",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X DELETE https://rudder.example.com/rudder/api/latest/nodes/NodeID",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"deleteNode\",\n  \"result\": \"success\",\n  \"data\": {\n    \"nodes\": [\n      {\n        \"id\": \"80ade5bf-aed9-4f57-8beb-aaaf3e63ec04\",\n        \"status\": \"deleted\",\n        \"hostname\": \"node6\",\n        \"osName\": \"Ubuntu\",\n        \"osVersion\": \"12.10\",\n        \"machineType\": \"Virtual\"\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 500 Server Error\n{\n  \"action\": \"deleteNode\",\n  \"result\": \"error\",\n  \"errorDetails\": \"Node with ID '80ade5bf-aed9-4f57-8beb-aaaf3e63ec04' was not found\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Node.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/nodes",
    "title": "1. List accepted Nodes",
    "version": "10.0.0",
    "name": "listAcceptedNodes",
    "group": "Nodes",
    "description": "<p>That function allow you to get details of accepted Nodes. You can make query on those Nodes based on inventory criterion. You can use the same queries than those used in NodeGroup queries</p>",
    "parameter": {
      "fields": {
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "String",
            "optional": true,
            "field": "include",
            "defaultValue": "default",
            "description": "<p>Level of information to include from the node inventory. Some base levels are defined (minimal, default, full). You can add fields you want to a base level by adding them to the list, possible values are keys from json answer. If you don't provide a base level, they will be added to default base level, so if you only want os details, use &quot;minimal,os&quot; as the value for this parameter. Details of returned properties at each level are given in the dedicated menu entry.</p>"
          }
        ],
        "Query parameters - Those parameters will be used to filter Nodes, based on group definition query system": [
          {
            "group": "Query",
            "type": "Query",
            "optional": true,
            "field": "query",
            "description": "<p>A query json object like we use as query in NodeGroups. A three field json object { 'composition' : 'and', 'select' : 'node', 'where' : [{&quot;objectType&quot;:&quot;node&quot;,&quot;attribute&quot;:&quot;OS&quot;,&quot;comparator&quot;:&quot;eq&quot;,&quot;value&quot;:&quot;Linux&quot;}]}, That parameter can be replaced by the three following (select, composition, where)</p>"
          },
          {
            "group": "Query",
            "type": "Criterion",
            "optional": true,
            "field": "where",
            "description": "<p>The criterion you want to find for your nodes like '[{&quot;objectType&quot;:&quot;node&quot;,&quot;attribute&quot;:&quot;OS&quot;,&quot;comparator&quot;:&quot;eq&quot;,&quot;value&quot;:&quot;Linux&quot;}]}'</p>"
          },
          {
            "group": "Query",
            "type": "String",
            "optional": true,
            "field": "composition",
            "defaultValue": "and",
            "description": "<p>Boolean operator to use between each criteria. Other value is &quot;And&quot;. Only used if 'where' is defined.</p>"
          },
          {
            "group": "Query",
            "type": "String",
            "optional": true,
            "field": "select",
            "defaultValue": "node",
            "description": "<p>What kind of data we want to include. Here we can get policy servers/relay by setting 'nodeAndPolicyServer'. Only used if where is defined.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage (curl):",
        "content": "# Get all nodes having a hostname starting with node1 and based on Linux\ncurl -H \"X-API-Token: yourToken\" 'https://rudder.example.com/rudder/api/latest/nodes?where=\\[\\{\"objectType\":\"node\",\"attribute\":\"OS\",\"comparator\":\"eq\",\"value\":\"Linux\"\\},\\{\"objectType\":\"node\",\"attribute\":\"nodeHostname\",\"comparator\":\"regex\",\"value\":\"node1.*\"\\}\\]'",
        "type": "json"
      },
      {
        "title": "Example usage (python-requests):",
        "content": "# Get all nodes having a hostname starting with node1 and based on Linux and only display minmal information (id, hostname, status)\nurl = \"https://rudder.example.com/rudder/api/latest/nodes\"\nlinux = {\"objectType\":\"node\",\"attribute\":\"OS\",\"comparator\":\"eq\",\"value\":\"Linux\"}\nnode1 = {\"objectType\":\"node\",\"attribute\":\"nodeHostname\",\"comparator\":\"regex\",\"value\":\"node1.*\"}\nwhere = [ linux, node1 ]\nparams = { \"where\" : json.dumps(where), \"include\" : \"minimal\" }\nheaders = { \"X-API-TOKEN\" : \"yourToken\" }\nrequests.get(url, params = params, headers = headers, verify = False)",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success Response (curl):",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"listAcceptedNodes\",\n  \"result\": \"success\",\n  \"data\": {\n    \"nodes\": [\n      {\n        \"architectureDescription\": \"x86_64-linux-thread-multi\",\n        \"managementTechnology\": [\n          {\n            \"name\": \"CFEngine Community\"\n          }\n        ],\n        \"hostname\": \"node1\",\n        \"lastInventoryDate\": \"2015-04-30 13:50\",\n        \"status\": \"accepted\",\n        \"ipAddresses\": [\n          \"127.0.0.1\",\n          \"10.0.2.15\",\n          \"192.168.42.81\"\n        ],\n        \"machine\": {\n          \"id\": \"35898d4d-a117-6d94-5bf2-2e956de3f6e8\",\n          \"type\": \"Virtual\",\n          \"provider\": \"vbox\",\n          \"manufacturer\": \"innotek GmbH\",\n          \"serialNumber\": \"0\"\n        },\n        \"properties\": [\n          {\n            \"name\": \"utf-8 poetry\",\n            \"value\": \"ᚠᛇᚻ᛫ᛒᛦᚦ᛫ᚠᚱᚩᚠᚢᚱ᛫ᚠᛁᚱᚪ᛫ᚷᛖᚻᚹᛦᛚᚳᚢᛗ\"\n          },\n          {\n            \"name\": \"env_type\",\n            \"value\": \"dev\"\n          }\n        ],\n        \"ram\": 244,\n        \"os\": {\n          \"type\": \"Linux\",\n          \"name\": \"Debian\",\n          \"version\": \"7.2\",\n          \"fullName\": \"Debian GNU/Linux 7.2 (wheezy)\",\n          \"kernelVersion\": \"3.2.0-4-amd64\"\n        },\n        \"id\": \"dd404bda-2785-4959-abaa-8f37a0bbd85e\",\n        \"policyServerId\": \"root\"\n      }\n    ]\n  }\n}",
          "type": "json"
        },
        {
          "title": "Success Response (python-requests):",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"listAcceptedNodes\",\n  \"result\": \"success\",\n  \"data\": {\n    \"nodes\": [\n      {\n        \"hostname\": \"node1\",\n        \"status\": \"accepted\",\n        \"id\": \"dd404bda-2785-4959-abaa-8f37a0bbd85e\"\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes"
  },
  {
    "type": "get",
    "url": "/api/nodes/pending",
    "title": "2. List pending Nodes",
    "version": "10.0.0",
    "name": "listPendingNodes",
    "group": "Nodes",
    "parameter": {
      "fields": {
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "String",
            "optional": true,
            "field": "include",
            "defaultValue": "default",
            "description": "<p>Level of information to include from the node inventory. Some base levels are defined (minimal, default, full). You can add fields you want to a base level by adding them to the list, possible values are keys from json answer. If you don't provide a base level, they will be added to default base level, so if you only want os details, use &quot;minimal,os&quot; as the value for this parameter</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/nodes/pending?include=minimal",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"listPendingNodes\",\n  \"result\": \"success\",\n  \"data\": {\n    \"nodes\": [\n      {\n        \"id\": \"dd404bda-2785-4959-abaa-8f37a0bbd85e\",\n        \"hostname\": \"node1\",\n        \"status\": \"pending\"\n      },\n      {\n        \"id\": \"f6223b0e-e2aa-4d1f-b6d1-74de8ea8e513\",\n        \"hostname\": \"node3.rudder.local\",\n        \"status\": \"pending\"\n      },\n      {\n        \"id\": \"root\",\n        \"hostname\": \"server.rudder.local\",\n        \"status\": \"pending\"\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes"
  },
  {
    "type": "post",
    "url": "/api/nodes/{id}",
    "title": "6. Update Node settings and properties",
    "version": "12.0.0",
    "name": "updateNode",
    "group": "Nodes",
    "parameter": {
      "fields": {
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "Property",
            "optional": false,
            "field": "properties",
            "description": "<p>A property of the Node defined by its name and its value. Values are non-empty UTF-8 strings. Setting a key to the empty string removes it from the list of properties for that node.</p>"
          }
        ],
        "Parameter": [
          {
            "group": "Parameter",
            "type": "PolicyMode",
            "optional": false,
            "field": "policy",
            "description": "<p>In which mode the node will apply its configuration policy. You can choose between &quot;audit&quot; and &quot;enforce&quot; modes, or &quot;default&quot; to use the global mode</p>"
          },
          {
            "group": "Parameter",
            "type": "State",
            "optional": false,
            "field": "state",
            "description": "<p>The node lifecycle state. You can choose between &quot;enabled&quot;, &quot;ignored&quot;, &quot;empty-policies&quot;, &quot;initializing&quot;, and &quot;preparing-eol&quot; state. See https://docs.rudder.io/reference/current/usage/advanced_node_management.html#node-lifecycle for more information.</p>"
          },
          {
            "group": "Parameter",
            "type": "JSON",
            "optional": false,
            "field": "agentKey",
            "description": "<p>The agent key, dict containing two keys: &quot;status&quot; (optional, can be &quot;certified&quot; or &quot;undefined&quot;) and &quot;value&quot; (optional, in PEM format (either certificate or public key)).</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Node.</p>"
          }
        ]
      }
    },
    "description": "<p>This API allows to update the node settings.</p>",
    "examples": [
      {
        "title": "Initial content",
        "content": "# Given the \"data.json\" JSON file with content:\n{ \"properties\": [\n  { \"name\": \"env_type\"    , \"value\": \"production\" },\n  { \"name\": \"shell\"       , \"value\": \"/bin/sh\" },\n  { \"name\": \"utf-8 poetry\", \"value\": \"ᚠᛇᚻ᛫ᛒᛦᚦ᛫ᚠᚱᚩᚠᚢᚱ᛫ᚠᛁᚱᚪ᛫ᚷᛖᚻᚹᛦᛚᚳᚢᛗ\" }\n]\n, \"policyMode\" : \"audit\"\n}",
        "type": "json"
      },
      {
        "title": "Set properties and change to audit mode",
        "content": "# Setting properties from \"data.json\" and policy mode to audit:\ncurl -H \"X-API-Token: yourToken\" -X POST  -H \"Content-Type: application/json\" https://rudder.example.com/rudder/api/latest/nodes/NodeID -d @properties.json",
        "type": "json"
      },
      {
        "title": "Remove one property, change another one",
        "content": "# Removing the key \"utf-8 poetry\" from the command line and updating the \"env_type\" one:\ncurl -H \"X-API-Token: yourToken\" -X POST  -H \"Content-Type: application/json\" https://rudder.example.com/rudder/api/latest/nodes/NodeID -d '{ \"properties\": [{ \"name\":\"utf-8 poetry\", \"value\":\"\"}, {\"name\":\"env_type\", \"value\":\"deprovisioned\"}] }'",
        "type": "json"
      },
      {
        "title": "Remove a property, change another one and switch to default mode",
        "content": "# Removing the key \"env_type\" and changing \"shell\" and use default policy mode:\ncurl -H \"X-API-Token: yourToken\" -X POST  https://rudder.example.com/rudder/api/latest/nodes/NodeID -d \"properties=shell=/bin/false\" -d \"properties=env_type=\" -d \"policyMode=default\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Set properties and change to audit mode:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"updateNode\",\n  \"id\": \"4db088c8-d849-4f08-bfa9-ac96a22d461a\",\n  \"result\": \"success\",\n  \"data\": {\n    \"policyMode\": \"audit\",\n    \"properties\": [\n      {\n        \"name\": \"env_type\",\n        \"value\": \"production\"\n      },\n      {\n        \"name\": \"shell\",\n        \"value\": \"/bin/sh\"\n      },\n      {\n        \"name\": \"utf-8 poetry\",\n        \"value\": \"ᚠᛇᚻ᛫ᛒᛦᚦ᛫ᚠᚱᚩᚠᚢᚱ᛫ᚠᛁᚱᚪ᛫ᚷᛖᚻᚹᛦᛚᚳᚢᛗ\"\n      }\n    ]\n  }\n}",
          "type": "json"
        },
        {
          "title": "Remove property and modify another one:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"updateNode\",\n  \"id\": \"4db088c8-d849-4f08-bfa9-ac96a22d461a\",\n  \"result\": \"success\",\n  \"data\": {\n    \"policyMode\": \"audit\",\n    \"properties\": [\n      {\n        \"name\": \"env_type\",\n        \"value\": \"deprovisioned\"\n      },\n      {\n        \"name\": \"shell\",\n        \"value\": \"/bin/sh\"\n      }\n    ]\n  }\n}",
          "type": "json"
        },
        {
          "title": "Remove a property, modify another and change to audit mode:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"updateNode\",\n  \"id\": \"4db088c8-d849-4f08-bfa9-ac96a22d461a\",\n  \"result\": \"success\",\n  \"data\": {\n    \"policyMode\": \"default\",\n    \"properties\": [\n      {\n        \"name\": \"shell\",\n        \"value\": \"/bin/false\"\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes"
  },
  {
    "type": "post",
    "url": "/api/nodes/{id}",
    "title": "6. Update Node settings and properties",
    "version": "10.0.0",
    "name": "updateNode",
    "group": "Nodes",
    "parameter": {
      "fields": {
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "Property",
            "optional": false,
            "field": "properties",
            "description": "<p>A property of the Node defined by its name and its value. Values are non-empty UTF-8 strings. Setting a key to the empty string removes it from the list of properties for that node.</p>"
          }
        ],
        "Parameter": [
          {
            "group": "Parameter",
            "type": "PolicyMode",
            "optional": false,
            "field": "policy",
            "description": "<p>In which mode the node will apply its configuration policy. You can choose between &quot;audit&quot; and &quot;enforce&quot; modes, or &quot;default&quot; to use the global mode</p>"
          },
          {
            "group": "Parameter",
            "type": "State",
            "optional": false,
            "field": "state",
            "description": "<p>The node lifecycle state. You can choose between &quot;enabled&quot;, &quot;ignored&quot;, &quot;empty-policies&quot;, &quot;initializing&quot;, and &quot;preparing-eol&quot; state. See https://docs.rudder.io/reference/current/usage/advanced_node_management.html#node-lifecycle for more information.</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Node.</p>"
          }
        ]
      }
    },
    "description": "<p>This API allows to update the node settings.</p>",
    "examples": [
      {
        "title": "Initial content",
        "content": "# Given the \"data.json\" JSON file with content:\n{ \"properties\": [\n  { \"name\": \"env_type\"    , \"value\": \"production\" },\n  { \"name\": \"shell\"       , \"value\": \"/bin/sh\" },\n  { \"name\": \"utf-8 poetry\", \"value\": \"ᚠᛇᚻ᛫ᛒᛦᚦ᛫ᚠᚱᚩᚠᚢᚱ᛫ᚠᛁᚱᚪ᛫ᚷᛖᚻᚹᛦᛚᚳᚢᛗ\" }\n]\n, \"policyMode\" : \"audit\"\n}",
        "type": "json"
      },
      {
        "title": "Set properties and change to audit mode",
        "content": "# Setting properties from \"data.json\" and policy mode to audit:\ncurl -H \"X-API-Token: yourToken\" -X POST  -H \"Content-Type: application/json\" https://rudder.example.com/rudder/api/latest/nodes/NodeID -d @properties.json",
        "type": "json"
      },
      {
        "title": "Remove one property, change another one",
        "content": "# Removing the key \"utf-8 poetry\" from the command line and updating the \"env_type\" one:\ncurl -H \"X-API-Token: yourToken\" -X POST  -H \"Content-Type: application/json\" https://rudder.example.com/rudder/api/latest/nodes/NodeID -d '{ \"properties\": [{ \"name\":\"utf-8 poetry\", \"value\":\"\"}, {\"name\":\"env_type\", \"value\":\"deprovisioned\"}] }'",
        "type": "json"
      },
      {
        "title": "Remove a property, change another one and switch to default mode",
        "content": "# Removing the key \"env_type\" and changing \"shell\" and use default policy mode:\ncurl -H \"X-API-Token: yourToken\" -X POST  https://rudder.example.com/rudder/api/latest/nodes/NodeID -d \"properties=shell=/bin/false\" -d \"properties=env_type=\" -d \"policyMode=default\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Set properties and change to audit mode:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"updateNode\",\n  \"id\": \"4db088c8-d849-4f08-bfa9-ac96a22d461a\",\n  \"result\": \"success\",\n  \"data\": {\n    \"policyMode\": \"audit\",\n    \"properties\": [\n      {\n        \"name\": \"env_type\",\n        \"value\": \"production\"\n      },\n      {\n        \"name\": \"shell\",\n        \"value\": \"/bin/sh\"\n      },\n      {\n        \"name\": \"utf-8 poetry\",\n        \"value\": \"ᚠᛇᚻ᛫ᛒᛦᚦ᛫ᚠᚱᚩᚠᚢᚱ᛫ᚠᛁᚱᚪ᛫ᚷᛖᚻᚹᛦᛚᚳᚢᛗ\"\n      }\n    ]\n  }\n}",
          "type": "json"
        },
        {
          "title": "Remove property and modify another one:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"updateNode\",\n  \"id\": \"4db088c8-d849-4f08-bfa9-ac96a22d461a\",\n  \"result\": \"success\",\n  \"data\": {\n    \"policyMode\": \"audit\",\n    \"properties\": [\n      {\n        \"name\": \"env_type\",\n        \"value\": \"deprovisioned\"\n      },\n      {\n        \"name\": \"shell\",\n        \"value\": \"/bin/sh\"\n      }\n    ]\n  }\n}",
          "type": "json"
        },
        {
          "title": "Remove a property, modify another and change to audit mode:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"updateNode\",\n  \"id\": \"4db088c8-d849-4f08-bfa9-ac96a22d461a\",\n  \"result\": \"success\",\n  \"data\": {\n    \"policyMode\": \"default\",\n    \"properties\": [\n      {\n        \"name\": \"shell\",\n        \"value\": \"/bin/false\"\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/nodes.md",
    "groupTitle": "Nodes"
  },
  {
    "type": "put",
    "url": "/api/parameters",
    "title": "3. Create a new Parameter",
    "version": "10.0.0",
    "name": "createParameter",
    "group": "Parameters",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -H \"Content-Type: application/json\" -X PUT https://rudder.example.com/rudder/api/latest/parameters -d @JSON-file-name",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"createParameter\",\n  \"id\": \"rudder_file_edit_footer\",\n  \"result\": \"success\",\n  \"data\": {\n    \"parameters\": [\n      {\n        \"id\": \"rudder_file_edit_footer\",\n        \"value\": \"### End of file managed by Rudder ###\",\n        \"description\": \"Default inform message put in footer of managed files by Rudder\",\n        \"overridable\": false\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/parameters.md",
    "groupTitle": "Parameters",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>ID/name of the Parameter to create.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Parameter.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "value",
            "description": "<p>Value of the Parameter.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "overridable",
            "description": "<p>The value can be overidden by Node Parameter (not existing in 2.7)</p>"
          }
        ]
      }
    }
  },
  {
    "type": "delete",
    "url": "/api/parameters/{id}",
    "title": "5. Delete a Parameter",
    "version": "10.0.0",
    "name": "deleteParameter",
    "group": "Parameters",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X DELETE https://rudder.example.com/rudder/api/latest/parameters/ParameterId",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"deleteParameter\",\n  \"id\": \"rudder_file_edit_footer\",\n  \"result\": \"success\",\n  \"data\": {\n    \"parameters\": [\n      {\n        \"id\": \"rudder_file_edit_footer\",\n        \"value\": \"### Edited by Rudder ###\",\n        \"description\": \"Default inform message put in footer of managed files by Rudder\",\n        \"overridable\": false\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 500 Server Error\n{\n  \"action\": \"deleteParameter\",\n  \"id\": \"rudder_file_edit_footer\",\n  \"result\": \"error\",\n  \"errorDetails\": \"Could not delete Parameter rudder_file_edit_footer cause is: Could not find Parameter rudder_file_edit_footer.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/parameters.md",
    "groupTitle": "Parameters",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>ID/name of the Parameter.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/parameters",
    "title": "1. List all Parameters",
    "version": "10.0.0",
    "name": "listParameters",
    "group": "Parameters",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/parameters",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"listParameters\",\n  \"result\": \"success\",\n  \"data\": {\n    \"parameters\": [\n      {\n        \"id\": \"rudder_file_edit_header\",\n        \"value\": \"### Managed by Rudder, edit with care ###\",\n        \"description\": \"Default inform message put in header of managed files by Rudder\",\n        \"overridable\": true\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/parameters.md",
    "groupTitle": "Parameters"
  },
  {
    "type": "get",
    "url": "/api/parameters/{id}",
    "title": "2. Get Parameter details",
    "version": "10.0.0",
    "name": "parameterDetails",
    "group": "Parameters",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/parameters/ParameterId",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"parameterDetails\",\n  \"id\": \"rudder_file_edit_footer\",\n  \"result\": \"success\",\n  \"data\": {\n    \"parameters\": [\n      {\n        \"id\": \"rudder_file_edit_footer\",\n        \"value\": \"### End of file managed by Rudder ###\",\n        \"description\": \"Default inform message put in footer of managed files by Rudder\",\n        \"overridable\": false\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/parameters.md",
    "groupTitle": "Parameters",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>ID/name of the Parameter.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "post",
    "url": "/api/parameters/{id}",
    "title": "4. Update a Parameter",
    "version": "10.0.0",
    "name": "updateParameter",
    "group": "Parameters",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Parameter.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "value",
            "description": "<p>Value of the Parameter.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "overridable",
            "description": "<p>The value can be overidden by Node Parameter (not existing in 2.7)</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>ID/name of the Parameter.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST https://rudder.example.com/rudder/api/latest/parameters/ParameterId -d \"value=### Edited by Rudder ###\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"updateParameter\",\n  \"id\": \"rudder_file_edit_footer\",\n  \"result\": \"success\",\n  \"data\": {\n    \"parameters\": [\n      {\n        \"id\": \"rudder_file_edit_footer\",\n        \"value\": \"### Edited by Rudder ###\",\n        \"description\": \"Default inform message put in footer of managed files by Rudder\",\n        \"overridable\": false\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/parameters.md",
    "groupTitle": "Parameters"
  },
  {
    "type": "get",
    "url": "/api/rules/tree",
    "title": "7. Get Rules tree",
    "version": "10.0.0",
    "name": "GetRuleTree",
    "group": "Rules",
    "description": "<p>Get all Rules available in Rudder and their cateogries in a Tree</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/latest/rules/tree?prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"GetRuleTree\",\n  \"result\": \"success\",\n  \"data\": {\n    \"ruleCategories\": {\n      \"id\": \"rootRuleCategory\",\n      \"name\": \"Rules\",\n      \"description\": \"This is the main category of Rules\",\n      \"parent\": \"rootRuleCategory\",\n      \"categories\": [\n        {\n          \"id\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n          \"name\": \"Dev category\",\n          \"description\": \"\",\n          \"parent\": \"rootRuleCategory\",\n          \"categories\": [\n            {\n              \"id\": \"f45ec2fd-69f4-4669-9c22-1af3abe2a107\",\n              \"name\": \"Specific dev category\",\n              \"description\": \"\",\n              \"parent\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n              \"categories\": [\n                \n              ],\n              \"rules\": [\n                {\n                   \"id\": \"b7fda4e7-3616-4e99-89b0-8ffadaf6b0f0\",\n                   \"displayName\": \"my specific Rule\",\n                   \"shortDescription\": \"\",\n                   \"longDescription\": \"\",\n                   \"directives\": [],\n                   \"targets\": [],\n                   \"enabled\": true,\n                   \"system\": false\n                }\n              ]\n            }\n          ],\n          \"rules\": [\n            {\n              \"id\": \"f2aa50a9-961c-4cce-a266-380cffcdce32\",\n              \"displayName\": \"dev Rule\",\n              \"shortDescription\": \"\",\n              \"longDescription\": \"\",\n              \"directives\": [],\n              \"targets\": [],\n              \"enabled\": true,\n              \"system\": false\n            }\n          ]\n        }\n      ],\n      \"rules\": [\n        {\n          \"id\": \"43cde273-5bb0-466f-8850-7d3fdde03253\",\n          \"displayName\": \"Global security policy\",\n          \"shortDescription\": \"\",\n          \"longDescription\": \"\",\n          \"directives\": [],\n          \"targets\": [],\n          \"enabled\": true,\n          \"system\": false\n        },\n        {\n          \"id\": \"32377fd7-02fd-43d0-aab7-28460a91347b\",\n          \"displayName\": \"Global configuration for all nodes\",\n          \"shortDescription\": \"\",\n          \"longDescription\": \"This Rule was created automatically when Rudder was installed. It can be used to target Directives to all nodes (including the Rudder root server itself), or deleted if you would rather create your own set of Rules (it will never be created again).\",\n          \"directives\": [\n            \"bff45fe2-8233-4d28-96aa-78b0390b548b\"\n          ],\n          \"targets\": [\n            {\n              \"include\": {\n                \"or\": [\n                  \"special:all\",\n                  \"special:all_exceptPolicyServers\",\n                  \"special:all_nodes_without_role\"\n                ]\n              },\n              \"exclude\": {\n                \"or\": [\n                  \n                ]\n              }\n            }\n          ],\n          \"enabled\": false,\n          \"system\": false\n        }\n      ]\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules"
  },
  {
    "type": "put",
    "url": "/api/rules",
    "title": "6. Clone a Rule",
    "version": "10.0.0",
    "name": "cloneRule",
    "group": "Rules",
    "description": "<p>Create a new Rule based on an existing Rule. you can still modify its parameters, but you need at least to specify the name of the new Rule</p>",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "UUID",
            "optional": false,
            "field": "source",
            "description": "<p>ID of the Rule the clone will be based onto. if this parameter is missing there will be only a Rule creation.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "displayName",
            "description": "<p>Name of the Rule.</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "id",
            "defaultValue": "autoGenerated",
            "description": "<p>Define the id of the Rule to create, Rudder will generate an id if this is missing. You should only use it for specific use case.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "shortDescription",
            "description": "<p>Short description of the Rule.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "longDescription",
            "description": "<p>Long description of the Rule.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "defaultValue": "true",
            "description": "<p>enabled the Rule at creation. But this parameter can be overriden : if you want to create Rule with directives and Rule targets directly with workflow enabled, the Rule will be created disabled (to prevent creating active Rule without validation). But this parameter can be overriden. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          }
        ],
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "UUID",
            "optional": true,
            "field": "directives",
            "description": "<p>link one directive to the Rule. value needs to be an existing directive ID.</p>"
          },
          {
            "group": "Multi",
            "type": "RuleTarget",
            "optional": true,
            "field": "targets",
            "description": "<p>Link one target to the Rule. Rule targets are &quot;group:groupId&quot; and the special targets : &quot;special:all&quot; and &quot;special:all_exceptPolicyServers&quot;.</p>"
          },
          {
            "group": "Multi",
            "type": "Tag",
            "optional": true,
            "field": "tags",
            "description": "<p>Tags linked to this Rule. As JSON, send an object { &quot;key1&quot;:&quot;value1&quot;, ..., &quot;keyN&quot;:&quot;valueN&quot;}. As query paramereter, send a &quot;key:value&quot; pair for each tag.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X PUT 'http://rudder.example.com/rudder/api/latest/rules?prettify=true'  -d \"source=RuleIDSource\" -d \"displayName=Name of New Rule\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\":\"createRule\",\n  \"id\":\"73fb7802-5326-483a-a6d6-c29e78449558\",\n  \"result\":\"success\",\n  \"data\":{\n    \"rules\":[{\n      \"id\":\"73fb7802-5326-483a-a6d6-c29e78449558\",\n      \"displayName\":\"Cloned Rule\",\n      \"shortDescription\":\"\",\n      \"longDescription\":\"\",\n      \"directives\":[\"c4f58823-5cd6-455b-b0bc-1511c51e2533\"],\n      \"targets\":[\"group:1e975cb2-b929-46f5-9b1c-5e4d5d5f1027\"],\n      \"enabled\":false,\n      \"system\":false\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 500 Server Error\n{\n  \"action\":\"createRule\",\n  \"id\":\"4f7fb9e5-e9e2-41be-99fc-bfd95a733360\",\n  \"result\":\"error\",\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules"
  },
  {
    "type": "put",
    "url": "/api/rules",
    "title": "3. Create a new Rule",
    "version": "10.0.0",
    "name": "createRule",
    "group": "Rules",
    "description": "<p>Create a new Rule in Rudder. You can define all of its parameters, but you need at least its name</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken -X PUT 'http://rudder.example.com/rudder/api/latest/rules' -d \"displayName=Name of New Rule\"",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "displayName",
            "description": "<p>Name of the Rule.</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "id",
            "defaultValue": "autoGenerated",
            "description": "<p>Define the id of the Rule to create, Rudder will generate an id if this is missing. You should only use it for specific use case.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "shortDescription",
            "description": "<p>Short description of the Rule.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "longDescription",
            "description": "<p>Long description of the Rule.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "defaultValue": "true",
            "description": "<p>enabled the Rule at creation. But this parameter can be overriden : if you want to create Rule with directives and Rule targets directly with workflow enabled, the Rule will be created disabled (to prevent creating active Rule without validation). But this parameter can be overriden. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          }
        ],
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "UUID",
            "optional": true,
            "field": "directives",
            "description": "<p>link one directive to the Rule. value needs to be an existing directive ID.</p>"
          },
          {
            "group": "Multi",
            "type": "RuleTarget",
            "optional": true,
            "field": "targets",
            "description": "<p>Link one target to the Rule. Rule targets are &quot;group:groupId&quot; and the special targets : &quot;special:all&quot; and &quot;special:all_exceptPolicyServers&quot;.</p>"
          },
          {
            "group": "Multi",
            "type": "Tag",
            "optional": true,
            "field": "tags",
            "description": "<p>Tags linked to this Rule. As JSON, send an object { &quot;key1&quot;:&quot;value1&quot;, ..., &quot;keyN&quot;:&quot;valueN&quot;}. As query paramereter, send a &quot;key:value&quot; pair for each tag.</p>"
          }
        ]
      }
    }
  },
  {
    "type": "put",
    "url": "/api/rules/categories",
    "title": "11. Create a new Rule category.",
    "version": "10.0.0",
    "name": "createRuleCategory",
    "group": "Rules",
    "description": "<p>Create a new Rule category in Rudder. You can define all of its parameters, but you need at least its name</p>",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Name of the Rule category.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Rule category.</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "parent",
            "description": "<p>Id of the parent Rule category</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST 'http://rudder.example.com/rudder/api/latest/rules/categories' -d \"name=new category\" -d \"parent=4306143d-eabf-4478-b7b1-1616f4aa02b5\" -d \"description=A new category created via API'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"createRuleCategory\",\n  \"result\": \"success\",\n  \"data\": {\n    \"ruleCategories\": {\n      \"id\": \"370521d0-b05c-4ba6-b3e9-c391887897a4\",\n      \"name\": \"new category name\",\n      \"description\": \"A new category created via API\",\n      \"parent\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n      \"categories\": [],\n      \"rules\": []\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules"
  },
  {
    "type": "delete",
    "url": "/api/rules/{id}",
    "title": "5. Delete a Rule",
    "version": "10.0.0",
    "name": "deleteRule",
    "group": "Rules",
    "description": "<p>Delete the Rule having the ID passed in the URL</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X DELETE 'http://rudder.example.com/rudder/api/latest/rules/176ad06b-ed02-4da3-8053-16225d217741?prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\":\"deleteRule\",\n  \"id\":\"176ad06b-ed02-4da3-8053-16225d217741\",\n  \"result\":\"success\",\n  \"data\":{\n    \"rules\":[{\n      \"changeRequestId\":\"47\",\n      \"id\":\"176ad06b-ed02-4da3-8053-16225d217741\",\n      \"displayName\":\"toto2\",\n      \"shortDescription\":\"\",\n      \"longDescription\":\"\",\n      \"directives\":[],\n      \"targets\":[],\n      \"enabled\":false,\n      \"system\":false\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 500\n{\n  \"action\":\"deleteRule\",\n  \"id\":\"176ad06b-ed02-4da3-8053-16225d217741\",\n  \"result\":\"error\",\n  \"error details\":\"Could not delete Rule 176ad06b-ed02-4da3-8053-16225d217741 cause is: Could not find Rule 176ad06b-ed02-4da3-8053-16225d217741.\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/rules/categories/{id}",
    "title": "9. Delete a Rule category",
    "version": "10.0.0",
    "name": "deleteRuleCategory",
    "group": "Rules",
    "description": "<p>Delete a Rule category. It must have no child rules and no children categories</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X DELETE 'http://rudder.example.com/rudder/api/latest/rules/categories/4306143d-eabf-4478-b7b1-1616f4aa02b5?prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"deleteRuleCategory\",\n  \"result\": \"success\",\n  \"data\": {\n    \"ruleCategories\": {\n      \"id\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n      \"name\": \"another\",\n      \"description\": \"\",\n      \"parent\": \"rootRuleCategory\",\n      \"categories\": [\n        \"6c676103-0abf-4614-b0bd-19768e1bec15\"\n      ],\n      \"rules\": [\n        \"16fd4e1a-0364-4123-8a84-ff34caee5bf6\"\n      ]\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule category</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/rules/categories/{id}",
    "title": "8. Get a Rule category details",
    "version": "10.0.0",
    "name": "getRuleCategoryDetails",
    "group": "Rules",
    "description": "<p>Get the details of a Rule category, whose ID is specified in the URL</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/latest/rules/categories/4306143d-eabf-4478-b7b1-1616f4aa02b5?prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"getRuleCategoryDetails\",\n  \"result\": \"success\",\n  \"data\": {\n    \"ruleCategories\": {\n      \"id\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n      \"name\": \"another\",\n      \"description\": \"\",\n      \"parent\": \"rootRuleCategory\",\n      \"categories\": [\n        \"6c676103-0abf-4614-b0bd-19768e1bec15\"\n      ],\n      \"rules\": [\n        \"16fd4e1a-0364-4123-8a84-ff34caee5bf6\"\n      ]\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule category</p>"
          }
        ]
      }
    }
  },
  {
    "type": "get",
    "url": "/api/rules",
    "title": "1. List all Rules",
    "version": "10.0.0",
    "name": "listRules",
    "group": "Rules",
    "description": "<p>Get all Rules available in Rudder</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/latest/rules?prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\":\"listRules\",\n  \"result\":\"success\",\n  \"data\":{\n    \"rules\":[{\n      \"id\":\"bb803bc8-2df7-4734-a6b6-454476c82bc6\",\n      \"displayName\":\"to\",\n      \"shortDescription\":\"\",\n      \"longDescription\":\"\",\n      \"directives\":[],\n      \"targets\":[],\n      \"enabled\":false,\n      \"system\":false\n    },{\n      \"id\":\"628abf7b-8b5c-4c44-8cca-437b636a9523\",\n      \"displayName\":\"My roule\",\n      \"shortDescription\":\"\",\n      \"longDescription\":\"\",\n      \"directives\":[\"e61c0696-172b-46bb-80a9-d6f5ef1d2f85\"],\n      \"targets\":[\"special:all_exceptPolicyServers\"],\n      \"enabled\":true,\n      \"system\":false\n    },{\n      \"id\":\"06ba8940-ed6c-4102-ba46-93d640a64c36\",\n      \"displayName\":\"My first Rule\",\n      \"shortDescription\":\"\",\n      \"longDescription\":\"\",\n      \"directives\":[\"cba93d24-8780-4308-b732-84995125562a\",\"7d44f9ad-9a54-4165-bb46-f66e6c674b39\",\"6847ad49-1c7e-4314-b764-ec176b882b6b\",\"19be05b2-fb68-4ae1-acc0-e0ad2eba71fd\",\"0be6fb7c-42c5-419e-9f6f-eb13ac4e4acd\"],\n      \"targets\":[\"group:3b9be575-590d-4fe4-9fa5-cc166d985ccf\"],\n      \"enabled\":false,\n      \"system\":false\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules"
  },
  {
    "type": "get",
    "url": "/api/rules/{id}",
    "title": "2. Get a Rule details",
    "version": "10.0.0",
    "name": "ruleDetails",
    "group": "Rules",
    "description": "<p>Get details for one Rule by specifying its ID in the URL</p>",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET 'http://rudder.example.com/rudder/api/latest/rules/06ba8940-ed6c-4102-ba46-93d640a64c36?prettify=true'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\":\"ruleDetails\",\n  \"id\":\"06ba8940-ed6c-4102-ba46-93d640a64c36\",\n  \"result\":\"success\",\n  \"data\":{\n    \"rules\":[{\n      \"id\":\"06ba8940-ed6c-4102-ba46-93d640a64c36\",\n      \"displayName\":\"My first Rule\",\n      \"shortDescription\":\"\",\n      \"longDescription\":\"\",\n      \"directives\":[\"cba93d24-8780-4308-b732-84995125562a\",\"7d44f9ad-9a54-4165-bb46-f66e6c674b39\",\"6847ad49-1c7e-4314-b764-ec176b882b6b\",\"19be05b2-fb68-4ae1-acc0-e0ad2eba71fd\",\"0be6fb7c-42c5-419e-9f6f-eb13ac4e4acd\"],\n      \"targets\":[\"group:3b9be575-590d-4fe4-9fa5-cc166d985ccf\"], \n      \"enabled\":false,\n      \"system\":false\n    }]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule</p>"
          }
        ]
      }
    }
  },
  {
    "type": "post",
    "url": "/api/rules/{id}",
    "title": "4. Update a Rule",
    "version": "10.0.0",
    "name": "updateRule",
    "group": "Rules",
    "description": "<p>Modify any parameters of a Rule. Missing parameters means to not modify that parameter</p>",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "displayName",
            "description": "<p>Name of the Rule.</p>"
          },
          {
            "group": "Mono",
            "type": "Boolean",
            "optional": true,
            "field": "enabled",
            "description": "<p>Enable/disable the Rule. Used to be 'isEnabled' in response, look <a href=\"#non-compliant-data-in-response\">here</a> for more details.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "shortDescription",
            "description": "<p>Short description of the Rule.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "longDescription",
            "description": "<p>Long description of the Rule.</p>"
          }
        ],
        "Multi valued parameters - Those parameters need to be entered several times, they will add each other to form a list.": [
          {
            "group": "Multi",
            "type": "UUID",
            "optional": true,
            "field": "directives",
            "description": "<p>Link one directive to the Rule. value needs to be an existing directive ID.</p>"
          },
          {
            "group": "Multi",
            "type": "Ruletarget",
            "optional": true,
            "field": "targets",
            "description": "<p>Link one target to the Rule. Rule targets are for groups : &quot;group:groupId&quot;, nodes : &quot;node:nodeId&quot; and the special targets : &quot;special:all&quot; and &quot;special:all_exceptPolicyServers&quot;.</p>"
          },
          {
            "group": "Multi",
            "type": "Tag",
            "optional": true,
            "field": "tags",
            "description": "<p>Tags linked to this Rule. As JSON, send an object { &quot;key1&quot;:&quot;value1&quot;, ..., &quot;keyN&quot;:&quot;valueN&quot;}. As query paramereter, send a &quot;key:value&quot; pair for each tag.</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "Update display name: \ncurl -H \"X-API-Token: yourToken\" -X POST 'http://rudder.example.com/rudder/api/latest/rules/RuleID' -d \"displayName=Name of Rule\"",
        "type": "json"
      }
    ],
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules"
  },
  {
    "type": "post",
    "url": "/api/rules/categories/{id}",
    "title": "10. Update a Rule Category",
    "version": "10.0.0",
    "name": "updateRuleCategory",
    "group": "Rules",
    "description": "<p>Modify any parameters of a Rule category. Missing parameters means to not modify that parameter</p>",
    "parameter": {
      "fields": {
        "Mono valued parameters - Those parameters will only work with one value": [
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "name",
            "description": "<p>Name of the Rule category.</p>"
          },
          {
            "group": "Mono",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Rule category.</p>"
          },
          {
            "group": "Mono",
            "type": "UUID",
            "optional": true,
            "field": "Parent",
            "description": "<p>Id of the parent Rule category</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "UUID",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the Rule category</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST 'http://rudder.example.com/rudder/api/latest/rules/categories/4306143d-eabf-4478-b7b1-1616f4aa02b5?prettify=true' -d \"name=new category name\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "      HTTP/1.1 200 OK\n{\n  \"action\": \"updateRuleCategory\",\n  \"result\": \"success\",\n  \"data\": {\n    \"ruleCategories\": {\n      \"id\": \"4306143d-eabf-4478-b7b1-1616f4aa02b5\",\n      \"name\": \"new category name\",\n      \"description\": \"\",\n      \"parent\": \"rootRuleCategory\",\n      \"categories\": [\n        \"6c676103-0abf-4614-b0bd-19768e1bec15\"\n      ],\n      \"rules\": [\n        \"16fd4e1a-0364-4123-8a84-ff34caee5bf6\"\n      ]\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/rules.md",
    "groupTitle": "Rules"
  },
  {
    "type": "Response format documentation",
    "url": "/api/settings",
    "title": "0. List of all available settings",
    "version": "12.0.0",
    "group": "Settings",
    "description": "<p>Here is the list of all settings that can be managed within Rudder.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "global_policy_mode",
            "description": "<p>Define the default setting for global policy mode, either &quot;enforce&quot; or &quot;audit&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "global_policy_mode_overridable",
            "description": "<p>Allow overrides on this default setting</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "run_frequency",
            "description": "<p>Agent run schedule - time between agent runs (in minutes)</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "first_run_hour",
            "description": "<p>First agent run time - hour</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "first_run_minute",
            "description": "<p>First agent run time - minute</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "splay_time",
            "description": "<p>Maximum delay after scheduled run time (random interval)</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "modified_file_ttl",
            "description": "<p>Number of days to retain modified files</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "output_file_ttl",
            "description": "<p>Number of days to retain agent output files</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "require_time_synchronization",
            "description": "<p>Require time synchronization between nodes and policy server</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "relay_server_synchronization_method",
            "description": "<p>Method used to synchronize data between Rudder Server and Relays, either &quot;classic&quot; (agent protocol, default), &quot;rsync&quot; (use rsync to synchronize, that you'll need to be manually set up), or &quot;disabled&quot; (use third party system to transmit data)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "relay_server_synchronize_policies",
            "description": "<p>If &quot;rsync&quot; is set as a synchronization method, use rsync to synchronize policies between Rudder Server and Relays. If false, you'll have to synchronize policies yourself.</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "relay_server_synchronize_shared_files",
            "description": "<p>If &quot;rsync&quot; is set as a synchronization method, use rsync to synchronize shared files between Rudder Server and Relays. If false, you'll have to synchronize shared files yourself.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rudder_report_protocol_default",
            "description": "<p>Default reporting protocol used, either &quot;HTTPS&quot; or &quot;SYSLOG&quot; (can be overriden on a node basis)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "syslog_protocol_disabled",
            "description": "<p>Completely disable rudder syslog protocol</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rsyslog_reporting_protocol",
            "description": "<p>Protocol used for syslog communication between node and server, either &quot;UDP&quot; (default) or &quot;TCP&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "reporting_mode",
            "description": "<p>Compliance reporting mode, either &quot;full-compliance&quot; (default), &quot;changes-only&quot; or &quot;reports-disabled&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "heartbeat_frequency",
            "description": "<p>Send heartbeat every heartbeat_frequency runs (only on &quot;changes-only&quot; compliance mode)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "log_all_reports",
            "description": "<p>Log all reports received to /var/log/rudder/reports/all.log</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_change_message",
            "description": "<p>Enable change audit logs</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "mandatory_change_message",
            "description": "<p>Make message mandatory</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "change_message_prompt",
            "description": "<p>Explanation to display</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_change_request",
            "description": "<p>Enable Change Requests</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_self_validation",
            "description": "<p>Allow self validation</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_self_deployment",
            "description": "<p>Allow self deployment</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "display_recent_changes_graphs",
            "description": "<p>Display changes graphs</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "enable_javascript_directives",
            "description": "<p>Enable script evaluation in Directives</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "send_metrics",
            "description": "<p>Send anonymous usage statistics</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "node_onaccept_default_state",
            "description": "<p>Set default state for node when they are accepted within Rudder, can be &quot;enabled&quot;, &quot;ignored&quot;, &quot;empty-policies&quot;, &quot;initializing&quot;, &quot;preparing-eol&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "node_onaccept_default_policyMode",
            "description": "<p>Default policy mode for accepted node, can be &quot;default&quot;, &quot;enforce&quot; or &quot;audit&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "unexpected_allows_duplicate",
            "description": "<p>Ignore duplicated compliance reports (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "unexpected_unbound_var_values",
            "description": "<p>Allows multiple reports for configuration based on a multivalued variable (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_compute_changes",
            "description": "<p>Compute list of changes (repaired reports) per rules (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_generation_compute_dyngroups",
            "description": "<p>Recompute all dynamic groups at the start of policy generation (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_save_db_compliance_levels",
            "description": "<p>Store all compliance levels in database (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_save_db_compliance_details",
            "description": "<p>Store all compliance details in database (default false)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rudder_generation_max_parallelism",
            "description": "<p>Set the policy generation parrallelism, either as an number of thread (i.e. 4), or a multiplicative of the number of core (x0.5) (default 0.5)</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "rudder_generation_js_timeout",
            "description": "<p>Policy generation JS evaluation of directive parameter timeout in seconds (default 30)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_generation_continue_on_error",
            "description": "<p>Policy generation continues on error during NodeConfiguration evaluation (default false)</p>"
          }
        ]
      }
    },
    "filename": "src/public-api/endpoints/settings.md",
    "groupTitle": "Settings",
    "name": "Response_format_documentationApiSettings"
  },
  {
    "type": "Response format documentation",
    "url": "/api/settings",
    "title": "0. List of all available settings",
    "version": "10.0.0",
    "group": "Settings",
    "description": "<p>Here is the list of all settings that can be managed within Rudder.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "global_policy_mode",
            "description": "<p>Define the default setting for global policy mode, either &quot;enforce&quot; or &quot;audit&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "global_policy_mode_overridable",
            "description": "<p>Allow overrides on this default setting</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "run_frequency",
            "description": "<p>Agent run schedule - time between agent runs (in minutes)</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "first_run_hour",
            "description": "<p>First agent run time - hour</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "first_run_minute",
            "description": "<p>First agent run time - minute</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "splay_time",
            "description": "<p>Maximum delay after scheduled run time (random interval)</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "modified_file_ttl",
            "description": "<p>Number of days to retain modified files</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "output_file_ttl",
            "description": "<p>Number of days to retain agent output files</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "require_time_synchronization",
            "description": "<p>Require time synchronization between nodes and policy server</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "relay_server_synchronization_method",
            "description": "<p>Method used to synchronize data between Rudder Server and Relays, either &quot;classic&quot; (agent protocol, default), &quot;rsync&quot; (use rsync to synchronize, that you'll need to be manually set up), or &quot;disabled&quot; (use third party system to transmit data)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "relay_server_synchronize_policies",
            "description": "<p>If &quot;rsync&quot; is set as a synchronization method, use rsync to synchronize policies between Rudder Server and Relays. If false, you'll have to synchronize policies yourself.</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "relay_server_synchronize_shared_files",
            "description": "<p>If &quot;rsync&quot; is set as a synchronization method, use rsync to synchronize shared files between Rudder Server and Relays. If false, you'll have to synchronize shared files yourself.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rsyslog_reporting_protocol",
            "description": "<p>Protocol used for syslog communication between node and server, either &quot;UDP&quot; (default) or &quot;TCP&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "reporting_mode",
            "description": "<p>Compliance reporting mode, either &quot;full-compliance&quot; (default), &quot;changes-only&quot; or &quot;reports-disabled&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "heartbeat_frequency",
            "description": "<p>Send heartbeat every heartbeat_frequency runs (only on &quot;changes-only&quot; compliance mode)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "log_all_reports",
            "description": "<p>Log all reports received to /var/log/rudder/reports/all.log</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_change_message",
            "description": "<p>Enable change audit logs</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "mandatory_change_message",
            "description": "<p>Make message mandatory</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "change_message_prompt",
            "description": "<p>Explanation to display</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_change_request",
            "description": "<p>Enable Change Requests</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_self_validation",
            "description": "<p>Allow self validation</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_self_deployment",
            "description": "<p>Allow self deployment</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "display_recent_changes_graphs",
            "description": "<p>Display changes graphs</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "enable_javascript_directives",
            "description": "<p>Enable script evaluation in Directives</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "send_metrics",
            "description": "<p>Send anonymous usage statistics</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "node_onaccept_default_state",
            "description": "<p>Set default state for node when they are accepted within Rudder, can be &quot;enabled&quot;, &quot;ignored&quot;, &quot;empty-policies&quot;, &quot;initializing&quot;, &quot;preparing-eol&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "node_onaccept_default_policyMode",
            "description": "<p>Default policy mode for accepted node, can be &quot;default&quot;, &quot;enforce&quot; or &quot;audit&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "unexpected_allows_duplicate",
            "description": "<p>Ignore duplicated compliance reports (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "unexpected_unbound_var_values",
            "description": "<p>Allows multiple reports for configuration based on a multivalued variable (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_compute_changes",
            "description": "<p>Compute list of changes (repaired reports) per rules (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_generation_compute_dyngroups",
            "description": "<p>Recompute all dynamic groups at the start of policy generation (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_save_db_compliance_levels",
            "description": "<p>Store all compliance levels in database (default true)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_save_db_compliance_details",
            "description": "<p>Store all compliance details in database (default false)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rudder_generation_max_parallelism",
            "description": "<p>Set the policy generation parrallelism, either as an number of thread (i.e. 4), or a multiplicative of the number of core (x0.5) (default 0.5)</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "rudder_generation_js_timeout",
            "description": "<p>Policy generation JS evaluation of directive parameter timeout in seconds (default 30)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rudder_generation_continue_on_error",
            "description": "<p>Policy generation continues on error during NodeConfiguration evaluation (default false)</p>"
          }
        ]
      }
    },
    "filename": "src/public-api/endpoints/settings.md",
    "groupTitle": "Settings",
    "name": "Response_format_documentationApiSettings"
  },
  {
    "type": "Response format documentation",
    "url": "/api/settings",
    "title": "0. List of all available settings",
    "version": "8.0.0",
    "group": "Settings",
    "description": "<p>Here is the list of all settings that can be managed within Rudder.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "global_policy_mode",
            "description": "<p>Define the default setting for global policy mode, either &quot;enforce&quot; or &quot;audit&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "global_policy_mode_overridable",
            "description": "<p>Allow overrides on this default setting</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "run_frequency",
            "description": "<p>Agent run schedule - time between agent runs (in minutes)</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "first_run_hour",
            "description": "<p>First agent run time - hour</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "first_run_minute",
            "description": "<p>First agent run time - minute</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "splay_time",
            "description": "<p>Maximum delay after scheduled run time (random interval)</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "modified_file_ttl",
            "description": "<p>Number of days to retain modified files</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "output_file_ttl",
            "description": "<p>Number of days to retain agent output files</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "use_reverse_dns",
            "description": "<p>Use reverse DNS lookups on nodes to reinforce authentication to policy server</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "require_time_synchronization",
            "description": "<p>Require time synchronization between nodes and policy server</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rsyslog_reporting_protocol",
            "description": "<p>Protocol used for syslog communication between node and server, either &quot;UDP&quot; (default) or &quot;TCP&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "reporting_mode",
            "description": "<p>Compliance reporting mode, either &quot;full-compliance&quot; (default), &quot;changes-only&quot; or &quot;reports-disabled&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "Int",
            "optional": true,
            "field": "heartbeat_frequency",
            "description": "<p>Send heartbeat every heartbeat_frequency runs (only on &quot;changes-only&quot; compliance mode)</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "log_all_reports",
            "description": "<p>Log all reports received to /var/log/rudder/reports/all.log</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_change_message",
            "description": "<p>Enable change audit logs</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "mandatory_change_message",
            "description": "<p>Make message mandatory</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "change_message_prompt",
            "description": "<p>Explanation to display</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_change_request",
            "description": "<p>Enable Change Requests</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_self_validation",
            "description": "<p>Allow self validation</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "enable_self_deployment",
            "description": "<p>Allow self deployment</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "display_recent_changes_graphs",
            "description": "<p>Display changes graphs</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "enable_javascript_directives",
            "description": "<p>Enable script evaluation in Directives</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "send_metrics",
            "description": "<p>Send anonymous usage statistics</p>"
          }
        ]
      }
    },
    "filename": "src/public-api/endpoints/settings.md",
    "groupTitle": "Settings",
    "name": "Response_format_documentationApiSettings"
  },
  {
    "type": "get",
    "url": "/api/settings",
    "title": "1. List all Settings",
    "version": "12.0.0",
    "name": "getAllSettings",
    "group": "Settings",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/settings",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"getAllSettings\",\n  \"result\": \"success\",\n  \"data\": {\n    \"settings\": {\n      \"global_policy_mode\": \"enforce\",\n      \"global_policy_mode_overridable\": true,\n      \"run_frequency\": 5,\n      \"first_run_hour\": 0,\n      \"first_run_minute\": 0,\n      \"splay_time\": 4,\n      \"modified_file_ttl\": 30,\n      \"output_file_ttl\": 7,\n      \"require_time_synchronization\": true,\n      \"rsyslog_reporting_protocol\": \"UDP\",\n      \"rudder_report_protocol_default\": \"HTTPS\",\n      \"syslog_protocol_disabled\": true,\n      \"reporting_mode\": \"full-compliance\",\n      \"heartbeat_frequency\": 1,\n      \"log_all_reports\": true,\n      \"enable_change_message\": true,\n      \"mandatory_change_message\": false,\n      \"change_message_prompt\": \"Please enter a reason explaining this change.\",\n      \"enable_change_request\": false,\n      \"enable_self_validation\": true,\n      \"enable_self_deployment\": true,\n      \"display_recent_changes_graphs\": true,\n      \"enable_javascript_directives\": \"enabled\",\n      \"send_metrics\": \"not defined\",\n      \"node_onaccept_default_state\": \"enabled\",\n      \"node_onaccept_default_policyMode\": \"default\",\n      \"unexpected_allows_duplicate\": true,\n      \"unexpected_unbound_var_values\": true,\n      \"rudder_compute_changes\": true,\n      \"rudder_generation_compute_dyngroups\": true,\n      \"rudder_save_db_compliance_levels\": true,\n      \"rudder_save_db_compliance_details\": false,\n      \"rudder_generation_max_parallelism\": \"x0.5\",\n      \"rudder_generation_js_timeout\": 30,\n      \"rudder_generation_continue_on_error\": false\n\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/settings.md",
    "groupTitle": "Settings"
  },
  {
    "type": "get",
    "url": "/api/settings",
    "title": "1. List all Settings",
    "version": "10.0.0",
    "name": "getAllSettings",
    "group": "Settings",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/settings",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"getAllSettings\",\n  \"result\": \"success\",\n  \"data\": {\n    \"settings\": {\n      \"global_policy_mode\": \"enforce\",\n      \"global_policy_mode_overridable\": true,\n      \"run_frequency\": 5,\n      \"first_run_hour\": 0,\n      \"first_run_minute\": 0,\n      \"splay_time\": 4,\n      \"modified_file_ttl\": 30,\n      \"output_file_ttl\": 7,\n      \"require_time_synchronization\": true,\n      \"rsyslog_reporting_protocol\": \"UDP\",\n      \"reporting_mode\": \"full-compliance\",\n      \"heartbeat_frequency\": 1,\n      \"log_all_reports\": true,\n      \"enable_change_message\": true,\n      \"mandatory_change_message\": false,\n      \"change_message_prompt\": \"Please enter a reason explaining this change.\",\n      \"enable_change_request\": false,\n      \"enable_self_validation\": true,\n      \"enable_self_deployment\": true,\n      \"display_recent_changes_graphs\": true,\n      \"enable_javascript_directives\": \"enabled\",\n      \"send_metrics\": \"not defined\",\n      \"node_onaccept_default_state\": \"enabled\",\n      \"node_onaccept_default_policyMode\": \"default\",\n      \"unexpected_allows_duplicate\": true,\n      \"unexpected_unbound_var_values\": true,\n      \"rudder_compute_changes\": true,\n      \"rudder_generation_compute_dyngroups\": true,\n      \"rudder_save_db_compliance_levels\": true,\n      \"rudder_save_db_compliance_details\": false,\n      \"rudder_generation_max_parallelism\": \"x0.5\",\n      \"rudder_generation_js_timeout\": 30,\n      \"rudder_generation_continue_on_error\": false\n\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/settings.md",
    "groupTitle": "Settings"
  },
  {
    "type": "get",
    "url": "/api/settings",
    "title": "1. List all Settings",
    "version": "8.0.0",
    "name": "getAllSettings",
    "group": "Settings",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/settings",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"getAllSettings\",\n  \"result\": \"success\",\n  \"data\": {\n    \"settings\": {\n      \"use_reverse_dns\": false,\n      \"global_policy_mode\": \"enforce\",\n      \"global_policy_mode_overridable\": true,\n      \"run_frequency\": 5,\n      \"first_run_hour\": 0,\n      \"first_run_minute\": 0,\n      \"splay_time\": 4,\n      \"modified_file_ttl\": 30,\n      \"output_file_ttl\": 7,\n      \"require_time_synchronization\": true,\n      \"rsyslog_reporting_protocol\": \"UDP\",\n      \"reporting_mode\": \"full-compliance\",\n      \"heartbeat_frequency\": 1,\n      \"log_all_reports\": true,\n      \"enable_change_message\": true,\n      \"mandatory_change_message\": false,\n      \"change_message_prompt\": \"Please enter a reason explaining this change.\",\n      \"enable_change_request\": false,\n      \"enable_self_validation\": true,\n      \"enable_self_deployment\": true,\n      \"display_recent_changes_graphs\": true,\n      \"enable_javascript_directives\": \"enabled\",\n      \"send_metrics\": \"not defined\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/settings.md",
    "groupTitle": "Settings"
  },
  {
    "type": "get",
    "url": "/api/settings/{id}",
    "title": "2. Get Setting value",
    "version": "10.0.0",
    "name": "getSetting",
    "group": "Settings",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/settings/run_frequency",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"getSetting\",\n  \"id\": \"run_frequency\",\n  \"result\": \"success\",\n  \"data\": {\n    \"settings\": {\n      \"run_frequency\": 5\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/settings.md",
    "groupTitle": "Settings",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>ID/name of the Setting</p>"
          }
        ]
      }
    }
  },
  {
    "type": "post",
    "url": "/api/settings/{id}",
    "title": "3. Update a Setting",
    "version": "10.0.0",
    "name": "modifySetting",
    "group": "Settings",
    "parameter": {
      "fields": {
        "Mono valued settings - These settings will only work with one value": [
          {
            "group": "MonoSetting",
            "type": "String",
            "optional": true,
            "field": "value",
            "description": "<p>Value of the Setting.</p>"
          }
        ],
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>ID/name of the Setting</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST https://rudder.example.com/rudder/api/latest/settings/global_policy_mode_overridable -d \"value=true\"",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"modifySetting\",\n  \"id\": \"global_policy_mode_overridable\",\n  \"result\": \"success\",\n  \"data\": {\n    \"settings\": {\n      \"global_policy_mode_overridable\": true\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/settings.md",
    "groupTitle": "Settings"
  },
  {
    "type": "post",
    "url": "/api/system/archives/<archiveKind>",
    "title": "9. Create a new Rudder archive",
    "version": "11.0.0",
    "name": "archive_Kind_",
    "group": "System",
    "examples": [
      {
        "title": "Example usage (Full archive):",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST https://rudder.example.com/rudder/api/latest/system/archives/full",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response (Full archive):",
          "content": "{\n  \"action\": \"archiveFull\",\n  \"result\": \"success\",\n  \"data\": {\n    \"full\": {\n      \"commiter\": \"Rudder system account\",\n      \"gitCommit\": \"546de1b211ecc5b7ca295abac2191bc6bb05d44e\",\n      \"id\": \"2018-09-17_16-06-15.255\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/system.md",
    "groupTitle": "System"
  },
  {
    "type": "get",
    "url": "/api/system/status",
    "title": "1. Check Rudder web status",
    "version": "11.0.0",
    "name": "getStatus",
    "group": "System",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/system/status",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"getStatus\",\n  \"result\": \"success\",\n  \"data\": {\n    \"global\": \"OK\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/system.md",
    "groupTitle": "System"
  },
  {
    "type": "get",
    "url": "/api/system/info",
    "title": "2. Get information about Rudder version",
    "version": "11.0.0",
    "name": "getSystemInfo",
    "group": "System",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/system/info",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"getSystemInfo\",\n  \"result\": \"success\",\n  \"data\": {\n    \"rudder\": {\n      \"major-version\": \"5.0\",\n      \"full-version\": \"5.0.9-SNAPSHOT\",\n      \"build-time\": \"2019-03-25T10:11:23Z\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/system.md",
    "groupTitle": "System"
  },
  {
    "type": "get",
    "url": "/api/system/archives/<archiveKind>",
    "title": "8. List Rudder archives",
    "version": "11.0.0",
    "name": "list_Kind_Archive",
    "group": "System",
    "examples": [
      {
        "title": "Example usage (Full archive):",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/system/archives/full",
        "type": "json"
      },
      {
        "title": "Example usage (Rule archive):",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/system/archives/rules",
        "type": "json"
      },
      {
        "title": "Example usage (Directives archive):",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/system/archives/directives",
        "type": "json"
      },
      {
        "title": "Example usage (Groups archive):",
        "content": "curl -H \"X-API-Token: yourToken\" https://rudder.example.com/rudder/api/latest/system/archives/groups",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success-Response (Full archive):",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"listFullArchive\",\n  \"result\": \"success\",\n  \"data\": {\n    \"full\": [\n      {\n        \"id\": \"2018-09-13_18-41-18.748\",\n        \"date\": \"2018-09-13 at 18:41:18\",\n        \"commiter\": \"rudder\",\n        \"gitCommit\": \"f2bae753dd8a98a8879ab1d2a0a2ecb494b18daa\"\n      }\n    ]\n  }\n}",
          "type": "json"
        },
        {
          "title": "Success-Response (Rule archive):",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"listRulesArchive\",\n  \"result\": \"success\",\n  \"data\": {\n    \"rules\": [\n      {\n        \"id\": \"2018-09-13_18-41-18.748\",\n        \"date\": \"2018-09-13 at 18:41:18\",\n        \"commiter\": \"rudder\",\n        \"gitCommit\": \"f2bae753dd8a98a8879ab1d2a0a2ecb494b18daa\"\n      },\n      {\n        \"id\": \"2018-09-13_18-41-16.901\",\n        \"date\": \"2018-09-13 at 18:41:16\",\n        \"commiter\": \"rudder\",\n        \"gitCommit\": \"eba16f91631cd6248276ad66a9f0f01f1418fe25\"\n      },\n      {\n        \"id\": \"2018-09-13_18-41-16.761\",\n        \"date\": \"2018-09-13 at 18:41:16\",\n        \"commiter\": \"rudder\",\n        \"gitCommit\": \"b8ff871bef62f2a64c0e2fe0b9a3c722bf8ac9ee\"\n      }\n    ]\n  }\n}",
          "type": "json"
        },
        {
          "title": "Success-Response (Directive archive):",
          "content": "{\n  \"action\": \"listDirectivesArchive\",\n  \"result\": \"success\",\n  \"data\": {\n    \"directives\": [\n      {\n        \"id\": \"2018-09-14_11-18-13.353\",\n        \"date\": \"2018-09-14 at 11:18:13\",\n        \"commiter\": \"rudder\",\n        \"gitCommit\": \"43a2e9f37131ae797eedfb4776401bc326080f7f\"\n      },\n      {\n        \"id\": \"2018-09-14_11-18-12.079\",\n        \"date\": \"2018-09-14 at 11:18:12\",\n        \"commiter\": \"rudder\",\n        \"gitCommit\": \"21e9b8ebc77f0fe550b8c1f2ab4d829fc1804ad8\"\n      }\n    ]\n  }\n}",
          "type": "json"
        },
        {
          "title": "Success-Response (Groups archive):",
          "content": "\n{\n  \"action\": \"listGroupsArchive\",\n  \"result\": \"success\",\n  \"data\": {\n    \"groups\": [\n      {\n        \"id\": \"2018-09-14_11-18-13.353\",\n        \"date\": \"2018-09-14 at 11:18:13\",\n        \"commiter\": \"rudder\",\n        \"gitCommit\": \"43a2e9f37131ae797eedfb4776401bc326080f7f\"\n      },\n      {\n        \"id\": \"2018-09-14_11-18-12.358\",\n        \"date\": \"2018-09-14 at 11:18:12\",\n        \"commiter\": \"rudder\",\n        \"gitCommit\": \"71bd69a18af16e9f6bd2743b6037a964ccda3441\"\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/system.md",
    "groupTitle": "System"
  },
  {
    "type": "post",
    "url": "/api/regenerate/policies",
    "title": "6. Trigger a new policy generation",
    "version": "11.0.0",
    "name": "regeneratePolicies",
    "group": "System",
    "examples": [
      {
        "title": "Example usage (curl):",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST 'https://rudder.example.com/rudder/api/latest/system/regenerate/policies'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success Response (curl):",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"regeneratePolicies\",\n  \"result\": \"success\",\n  \"data\": {\n    \"policies\": \"Started\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/system.md",
    "groupTitle": "System"
  },
  {
    "type": "post",
    "url": "/api/system/reload",
    "title": "3. Reload both techniques and dynamic groups",
    "version": "11.0.0",
    "name": "reloadAll",
    "group": "System",
    "examples": [
      {
        "title": "Example usage (curl):",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST 'https://rudder.example.com/rudder/api/latest/system/reload'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success Response (curl):",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"reloadAll\",\n  \"result\": \"success\",\n  \"data\": {\n    \"groups\": \"Started\",\n    \"techniques\": \"Started\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/system.md",
    "groupTitle": "System"
  },
  {
    "type": "post",
    "url": "/api/system/reload/groups",
    "title": "5. Reload dynamic groups",
    "version": "11.0.0",
    "name": "reloadGroups",
    "group": "System",
    "examples": [
      {
        "title": "Example usage (curl):",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST 'https://rudder.example.com/rudder/api/latest/system/reload/groups'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success Response (curl):",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"reloadGroups\",\n  \"result\": \"success\",\n  \"data\": {\n    \"groups\": \"Started\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/system.md",
    "groupTitle": "System"
  },
  {
    "type": "post",
    "url": "/api/reload/techniques",
    "title": "4. Reload Technique library",
    "version": "11.0.0",
    "name": "reloadTechniques",
    "group": "System",
    "examples": [
      {
        "title": "Example usage (curl):",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST 'https://rudder.example.com/rudder/api/latest/system/reload/techniques'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success Response (curl):",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"reloadTechniques\",\n  \"result\": \"success\",\n  \"data\": {\n    \"techniques\": \"Started\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/system.md",
    "groupTitle": "System"
  },
  {
    "type": "post",
    "url": "/api/system/update/policies",
    "title": "7. Trigger update of policies",
    "version": "11.0.0",
    "name": "updatePolicies",
    "group": "System",
    "examples": [
      {
        "title": "Example usage (curl):",
        "content": "curl -H \"X-API-Token: yourToken\" -X POST 'https://rudder.example.com/rudder/api/latest/system/update/policies'",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success Response (curl):",
          "content": "HTTP/1.1 200 OK\n{\n  \"action\": \"updatePolicies\",\n  \"result\": \"success\",\n  \"data\": {\n    \"policies\": \"Started\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/system.md",
    "groupTitle": "System"
  },
  {
    "type": "get",
    "url": "/api/techniques/{name}/{version}/directives",
    "title": "3. List all Directives based on one version of a Technique",
    "version": "10.0.0",
    "name": "listDirectivesVersion",
    "group": "Techniques",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Name of the Technique.</p>"
          },
          {
            "group": "URL parameters",
            "type": "Version",
            "optional": false,
            "field": "version",
            "description": "<p>Version of the Technique.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/techniques/checkGenericFileContent/6.0/directives",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success Response:",
          "content": "{\n  \"action\": \"listDirectives\",\n  \"result\": \"success\",\n  \"data\": {\n    \"directives\": [\n      {\n        \"id\": \"54d6b022-2324-476b-9d16-6ade3d1371e9\",\n        \"displayName\": \"cccc\",\n        \"shortDescription\": \"\",\n        \"longDescription\": \"\",\n        \"techniqueName\": \"checkGenericFileContent\",\n        \"techniqueVersion\": \"6.0\",\n        \"parameters\": {\n          \"section\": {\n            \"name\": \"sections\",\n            \"sections\": [\n              {\n                \"section\": {\n                  \"name\": \"File to manage\",\n                  \"sections\": [\n                    {\n                      \"section\": {\n                        \"name\": \"Enforce content by section\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_SECTION_MANAGEMENT\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_SECTION_CONTENT\",\n                              \"value\": \"\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_SECTION_FOOTER\",\n                              \"value\": \"\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_SECTION_HEADER\",\n                              \"value\": \"\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Enforce content only in zone\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_MIGRATE_TO_ZONE_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ZONE_FOOTER\",\n                              \"value\": \"### End of section managed by Rudder\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ZONE_HEADER\",\n                              \"value\": \"### Beginning of section managed by Rudder\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"File\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_CREATE_BOOLEAN\",\n                              \"value\": \"true\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_DELETION_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ENFORCE\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ENFORCE_CREATE_ONLY_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_MODIFICATION_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ONLY_ZONE_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_PATH\",\n                              \"value\": \"/tmp/test\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"File content\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_PAYLOAD\",\n                              \"value\": \"\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Line deletion regular expressions\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_DELETION_REGEXP\",\n                              \"value\": \"deleteme.*\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Line replacement regular expressions\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_MODIFICATION_DESTINATION\",\n                              \"value\": \"\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_MODIFICATION_REGEXP\",\n                              \"value\": \"replaceme.*\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Permission adjustment\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_GROUP\",\n                              \"value\": \"root\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_OWNER\",\n                              \"value\": \"root\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_PERM\",\n                              \"value\": \"644\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_PERMISSION_ADJUSTMENT\",\n                              \"value\": \"false\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Post-modification hook\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_POST_HOOK_COMMAND\",\n                              \"value\": \"\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_POST_HOOK_RUN\",\n                              \"value\": \"false\"\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        },\n        \"priority\": 5,\n        \"enabled\": true,\n        \"system\": false\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/techniques.md",
    "groupTitle": "Techniques"
  },
  {
    "type": "get",
    "url": "/api/techniques",
    "title": "1. List all Techniques",
    "version": "10.0.0",
    "name": "listTechniques",
    "group": "Techniques",
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/techniques",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success Response:",
          "content": "{\n  \"action\": \"listTechniques\",\n  \"result\": \"success\",\n  \"data\": {\n    \"techniques\": [\n      {\n        \"name\": \"copyGitFile\",\n        \"versions\": [\n          \"1.0\",\n          \"1.1\",\n          \"1.2\",\n          \"1.3\",\n          \"1.4\",\n          \"1.5\",\n          \"1.6\",\n          \"1.7\",\n          \"2.0\",\n          \"2.1\"\n        ]\n      },\n      {\n        \"name\": \"aptPackageInstallation\",\n        \"versions\": [\n          \"1.0\",\n          \"1.1\",\n          \"1.2\",\n          \"2.0\",\n          \"3.0\",\n          \"4.0\"\n        ]\n      },\n      {\n        \"name\": \"variableFromJsonFile\",\n        \"versions\": []\n      },\n      {\n        \"name\": \"fstabConfiguration\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"3.0\",\n          \"4.0\"\n        ]\n      },\n      {\n        \"name\": \"userManagement\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"3.0\",\n          \"4.0\",\n          \"5.0\",\n          \"6.0\"\n        ]\n      },\n      {\n        \"name\": \"sshConfiguration\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"3.0\",\n          \"4.0\",\n          \"5.0\"\n        ]\n      },\n      {\n        \"name\": \"checkGenericFileContent\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"2.1\",\n          \"3.0\",\n          \"3.1\",\n          \"3.2\",\n          \"4.0\",\n          \"5.0\",\n          \"6.0\",\n          \"7.0\"\n        ]\n      },\n      {\n        \"name\": \"filesPermissions\",\n        \"versions\": [\n          \"1.0\",\n          \"1.1\",\n          \"2.0\",\n          \"2.1\"\n        ]\n      },\n      {\n        \"name\": \"cronManagement\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"3.0\"\n        ]\n      },\n      {\n        \"name\": \"aptPackageManagerSettings\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"3.0\",\n          \"3.1\"\n        ]\n      },\n      {\n        \"name\": \"fileAlterationMonitoring\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\"\n        ]\n      },\n      {\n        \"name\": \"zypperPackageManagerRepositories\",\n        \"versions\": [\n          \"1.0\"\n        ]\n      },\n      {\n        \"name\": \"motdConfiguration\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"3.0\",\n          \"3.1\",\n          \"3.2\"\n        ]\n      },\n      {\n        \"name\": \"distributePolicy\",\n        \"versions\": [\n          \"1.0\"\n        ]\n      },\n      {\n        \"name\": \"repoGpgKeyManagement\",\n        \"versions\": [\n          \"1.0\"\n        ]\n      },\n      {\n        \"name\": \"downloadFile\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"3.0\"\n        ]\n      },\n      {\n        \"name\": \"routingManagement\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\"\n        ]\n      },\n      {\n        \"name\": \"dnsConfiguration\",\n        \"versions\": [\n          \"1.0\",\n          \"1.1\",\n          \"2.0\",\n          \"3.0\"\n        ]\n      },\n      {\n        \"name\": \"rpmPackageInstallation\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"2.1\",\n          \"2.2\",\n          \"3.0\",\n          \"4.0\",\n          \"4.1\",\n          \"5.0\",\n          \"5.1\",\n          \"6.0\",\n          \"6.1\",\n          \"7.0\"\n        ]\n      },\n      {\n        \"name\": \"genericVariableDefinition\",\n        \"versions\": [\n          \"1.0\",\n          \"1.1\",\n          \"1.2\",\n          \"2.0\"\n        ]\n      },\n      {\n        \"name\": \"sshKeyDistribution\",\n        \"versions\": [\n          \"1.0\",\n          \"2.0\",\n          \"3.0\"\n        ]\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/techniques.md",
    "groupTitle": "Techniques"
  },
  {
    "type": "get",
    "url": "/api/techniques/{name}/directives",
    "title": "2. List all Directives based on all version of a Technique",
    "version": "10.0.0",
    "name": "listTechniquesDirectives",
    "group": "Techniques",
    "parameter": {
      "fields": {
        "URL parameters": [
          {
            "group": "URL parameters",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Name of the Technique.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example usage:",
        "content": "curl -H \"X-API-Token: yourToken\" -X GET http://rudder.example.com/rudder/api/latest/techniques/checkGenericFileContent/directives",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success Response:",
          "content": "{\n  \"action\": \"listTechniquesDirectives\",\n  \"result\": \"success\",\n  \"data\": {\n    \"directives\": [\n      {\n        \"id\": \"54d6b022-2324-476b-9d16-6ade3d1371e9\",\n        \"displayName\": \"cccc\",\n        \"shortDescription\": \"\",\n        \"longDescription\": \"\",\n        \"techniqueName\": \"checkGenericFileContent\",\n        \"techniqueVersion\": \"6.0\",\n        \"parameters\": {\n          \"section\": {\n            \"name\": \"sections\",\n            \"sections\": [\n              {\n                \"section\": {\n                  \"name\": \"File to manage\",\n                  \"sections\": [\n                    {\n                      \"section\": {\n                        \"name\": \"Enforce content by section\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_SECTION_MANAGEMENT\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_SECTION_CONTENT\",\n                              \"value\": \"\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_SECTION_FOOTER\",\n                              \"value\": \"\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_SECTION_HEADER\",\n                              \"value\": \"\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Enforce content only in zone\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_MIGRATE_TO_ZONE_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ZONE_FOOTER\",\n                              \"value\": \"### End of section managed by Rudder\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ZONE_HEADER\",\n                              \"value\": \"### Beginning of section managed by Rudder\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"File\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_CREATE_BOOLEAN\",\n                              \"value\": \"true\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_DELETION_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ENFORCE\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ENFORCE_CREATE_ONLY_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_MODIFICATION_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_ONLY_ZONE_BOOLEAN\",\n                              \"value\": \"false\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_PATH\",\n                              \"value\": \"/tmp/test\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"File content\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_PAYLOAD\",\n                              \"value\": \"\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Line deletion regular expressions\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_DELETION_REGEXP\",\n                              \"value\": \"deleteme.*\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Line replacement regular expressions\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_MODIFICATION_DESTINATION\",\n                              \"value\": \"\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_MODIFICATION_REGEXP\",\n                              \"value\": \"replaceme.*\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Permission adjustment\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_GROUP\",\n                              \"value\": \"root\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_OWNER\",\n                              \"value\": \"root\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_PERM\",\n                              \"value\": \"644\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_PERMISSION_ADJUSTMENT\",\n                              \"value\": \"false\"\n                            }\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"section\": {\n                        \"name\": \"Post-modification hook\",\n                        \"vars\": [\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_POST_HOOK_COMMAND\",\n                              \"value\": \"\"\n                            }\n                          },\n                          {\n                            \"var\": {\n                              \"name\": \"GENERIC_FILE_CONTENT_POST_HOOK_RUN\",\n                              \"value\": \"false\"\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        },\n        \"priority\": 5,\n        \"enabled\": true,\n        \"system\": false\n      }\n    ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "filename": "src/public-api/endpoints/techniques.md",
    "groupTitle": "Techniques"
  }
]
